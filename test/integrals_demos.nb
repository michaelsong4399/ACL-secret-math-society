(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    208984,       4255]
NotebookOptionsPosition[    205897,       4190]
NotebookOutlinePosition[    206371,       4207]
CellTagsIndexPosition[    206328,       4204]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Integrals and Volumes", "Title",
 CellChangeTimes->{{3.8225762708674183`*^9, 
  3.8225762752749443`*^9}},ExpressionUUID->"0de6ef5f-3335-4ad4-97d5-\
cbd258714550"],

Cell["\<\
A collection of methods and demonstrations found on Wolfram Demonstrations\
\>", "Subtitle",
 CellChangeTimes->{{3.822576278634242*^9, 
  3.82257629830628*^9}},ExpressionUUID->"fbca61c8-12e5-4faf-bfa5-\
8fcf80a40ced"],

Cell["Arranged by Anika Patel", "Text",
 CellChangeTimes->{{3.8225763222772985`*^9, 
  3.822576324693261*^9}},ExpressionUUID->"a0ac548d-9b34-41ce-bdd6-\
3d3cd9cfeff4"],

Cell[CellGroupData[{

Cell["The Disk Method", "Chapter",
 CellChangeTimes->{{3.822575856979673*^9, 
  3.822575864043209*^9}},ExpressionUUID->"ff324cad-4b4d-44f3-8a90-\
0295dfe094be"],

Cell["Credits: https://demonstrations.wolfram.com/TheDiskMethod/ ", "Text",
 CellChangeTimes->{{3.822575901771644*^9, 
  3.82257590497142*^9}},ExpressionUUID->"ae9849d0-c312-4545-9d26-\
97db319924ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"sec", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t0", ",", "0", ",", 
                  RowBox[{"-", ".15"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"t0", ",", "0", ",", 
                   RowBox[{"-", ".04"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t0", ",", "0", ",", ".04"}], "}"}]}], "}"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"revvol", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<volume of the solid = \!\(\*SubsuperscriptBox[\(\
\[Integral]\), \(a\), \(b\)]\)\>\"", ",", "\"\<\[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    RowBox[{"Superscript", "[", 
                    RowBox[{"\"\<)\>\"", ",", "\"\<2 \>\""}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<dx\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                   "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"2.5", ",", "0", ",", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", "6.", "]"}]}], "+", "2.5"}]}], 
                   "}"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Red", ",", "Thick", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"t0", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t0", ",", "0", ",", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", "t0"}], "+", "1"}], "]"}]}], "+", "1"}]}], 
                    "}"}]}], "}"}], "]"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"revarea", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "[", "Orange", "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<area = \[Pi] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    RowBox[{"Superscript", "[", 
                    RowBox[{"\"\<)\>\"", ",", "2"}], "]"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"t0", ",", "0", ",", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", "t0"}], "+", "1"}], "]"}]}], "+", "1.85"}]}],
                    "}"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Red", ",", "Thick", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"t0", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t0", ",", "0", ",", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", "t0"}], "+", "1"}], "]"}]}], "+", "1"}]}], 
                    "}"}]}], "}"}], "]"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< = \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<(\>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<)\>\""}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"4.45", ",", "0", ",", "1.2"}], "}"}]}], "]"}], ",", 
            "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"t0", "==", "1"}], "||", 
               RowBox[{"t0", ">=", "1.35"}]}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{".95", ",", "0", ",", 
                  RowBox[{"-", ".15"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<b\>\"", ",", "Italic"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"4", ",", "0", ",", 
                RowBox[{"-", ".15"}]}], "}"}]}], "]"}], ",", "\n", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"4.55", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
            "\n", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "2.6"}], "}"}]}], "]"}]}], "}"}], 
          ",", "\n", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"5", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "4"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "4"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], ",", "\n", "leftend", ",", "rightend", ",", "\n", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", 
               RowBox[{"-", ".04"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", ".04"}], "}"}]}], "}"}], "]"}], ",",
           "\n", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "0", ",", 
               RowBox[{"-", ".04"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "0", ",", ".04"}], "}"}]}], "}"}], "]"}], ",",
           "\n", 
          RowBox[{"If", "[", 
           RowBox[{"sec", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"revarea", ",", 
                RowBox[{"Blend", "[", 
                 RowBox[{"{", 
                  RowBox[{"Yellow", ",", "LightPurple"}], "}"}], "]"}], ",", 
                "LightOrange"}], "]"}], ",", 
              RowBox[{"Polygon", "[", 
               RowBox[{"Prepend", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"t0", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", "t0"}], "+", "1"}], "]"}]}], "+", "1"}], 
                    ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", "t0"}], "+", "1"}], "]"}]}], "+", "1"}], 
                    ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{"\[Pi]", "/", "10"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t0", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}],
              "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"revrad", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<radius = \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t0", ",", "0", ",", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", "t0"}], "+", "1"}], "]"}]}], "+", "1.5"}]}], 
                   "}"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Thick", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"t0", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t0", ",", "0", ",", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", "t0"}], "+", "1"}], "]"}]}], "+", "1"}]}], 
                    "}"}]}], "}"}], "]"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\n", "}"}], "]"}], ",", "curve2", 
       ",", "comsolid2"}], "\n", "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "4.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.3"}], ",", "2.5"}], "}"}]}], "}"}]}], ",", "\n", 
     RowBox[{"AxesOrigin", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Boxed", "->", "False"}], ",", 
     RowBox[{"Axes", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"ViewPoint", "->", 
      RowBox[{"{", 
       RowBox[{"1.5", ",", 
        RowBox[{"-", "4"}], ",", "0"}], "}"}]}], ",", 
     RowBox[{"Background", "->", "White"}], ",", 
     RowBox[{"ImageSize", "->", "450"}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", "None", ",", "None"}], "}"}]}], 
     ",", 
     RowBox[{"BaseStyle", "->", "14"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sec", ",", "True", ",", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<cross\>\"", ",", "\"\<section\>\""}], "}"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t0", ",", "2.5", ",", "\"\< \>\""}], "}"}], ",", "1", ",", "4",
      ",", 
     RowBox[{"ImageSize", "->", "Tiny"}], ",", 
     RowBox[{"Enabled", "->", "sec"}]}], "}"}], ",", "\n", "\"\<\\n\>\"", ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"revrad", ",", "False", ",", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\"\<radius\>\"", "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"revarea", ",", "False", ",", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\"\<area\>\"", "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"revvol", ",", "False", ",", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\"\<volume\>\"", "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", "\n", 
   RowBox[{"ControlPlacement", "->", "Left"}], ",", "\n", 
   RowBox[{"Initialization", ":>", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"curve2", "=", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", 
           RowBox[{
            RowBox[{".25", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "+", "1"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", ".5", ",", "4.5"}], "}"}], ",", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{"AbsoluteThickness", "[", "1.75", "]"}]}], "}"}]}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"comsolid2", "=", 
       RowBox[{"RevolutionPlot3D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{".25", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"2", "t"}], "+", "1"}], "]"}]}], "+", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "0", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"RevolutionAxis", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
         RowBox[{"Mesh", "->", "None"}], ",", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"Opacity", "[", ".3", "]"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"leftend", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", ".3", "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{".25", 
                    RowBox[{"Sin", "[", "3", "]"}]}], "+", "1"}], ")"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{".25", 
                    RowBox[{"Sin", "[", "3", "]"}]}], "+", "1"}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", 
                RowBox[{"2", "\[Pi]"}], ",", 
                RowBox[{"\[Pi]", "/", "12"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"rightend", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", ".3", "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"4", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{".25", 
                    RowBox[{"Sin", "[", "9", "]"}]}], "+", "1"}], ")"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{".25", 
                    RowBox[{"Sin", "[", "9", "]"}]}], "+", "1"}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", 
                RowBox[{"2", "\[Pi]"}], ",", 
                RowBox[{"\[Pi]", "/", "12"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
        "}"}]}]}], ")"}]}], ",", "\n", 
   RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 7585.},
 CellChangeTimes->{
  3.35696210375764*^9, 3.4598664545846767`*^9, {3.459866492168643*^9, 
   3.459866492871965*^9}, {3.459866577397463*^9, 3.459866617502541*^9}, {
   3.459867834174717*^9, 3.459867842000558*^9}, {3.460489675738035*^9, 
   3.4604897533469133`*^9}, {3.4604899644705625`*^9, 
   3.4604899891266546`*^9}, {3.460490032579501*^9, 3.4604900721104984`*^9}, {
   3.460490105797783*^9, 3.4604901552505913`*^9}, {3.460746543913824*^9, 
   3.4607465927747097`*^9}, 
   3.7608177043940897`*^9},ExpressionUUID->"1426f7e2-1762-40c0-9beb-\
3b19d8bd3bb3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`revarea$$ = False, $CellContext`revrad$$ = 
    False, $CellContext`revvol$$ = False, $CellContext`sec$$ = 
    True, $CellContext`t0$$ = 1.88, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`sec$$], True, 
       Column[{"cross", "section"}]}, {False, True}}, {{
       Hold[$CellContext`t0$$], 2.5, " "}, 1, 4}, {
      Hold["\n"], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`revrad$$], False, 
       Column[{"radius"}]}, {False, True}}, {{
       Hold[$CellContext`revarea$$], False, 
       Column[{"area"}]}, {False, True}}, {{
       Hold[$CellContext`revvol$$], False, 
       Column[{"volume"}]}, {False, True}}}, Typeset`size$$ = {
    450., {222., 228.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`sec$149420$$ = 
    False, $CellContext`t0$149421$$ = 0, $CellContext`revrad$149422$$ = 
    False, $CellContext`revarea$149423$$ = 
    False, $CellContext`revvol$149424$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`revarea$$ = False, $CellContext`revrad$$ = 
        False, $CellContext`revvol$$ = False, $CellContext`sec$$ = 
        True, $CellContext`t0$$ = 2.5}, "ControllerVariables" :> {
        Hold[$CellContext`sec$$, $CellContext`sec$149420$$, False], 
        Hold[$CellContext`t0$$, $CellContext`t0$149421$$, 0], 
        Hold[$CellContext`revrad$$, $CellContext`revrad$149422$$, False], 
        Hold[$CellContext`revarea$$, $CellContext`revarea$149423$$, False], 
        Hold[$CellContext`revvol$$, $CellContext`revvol$149424$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         Graphics3D[{
           If[$CellContext`sec$$, {
             Text[
              Style["x", Italic], {$CellContext`t0$$, 0, -0.15}], 
             
             Line[{{$CellContext`t0$$, 0, -0.04}, {$CellContext`t0$$, 0, 
                0.04}}]}, {}], 
           If[$CellContext`revvol$$, {{Black, 
              Text[
               
               Row[{"volume of the solid = \!\(\*SubsuperscriptBox[\(\
\[Integral]\), \(a\), \(b\)]\)", "\[Pi] ", 
                 Style["f", Italic], "(", 
                 Style["x", Italic], 
                 Superscript[")", "2 "], 
                 Style["dx", Italic]}], {2.5, 0, 0.25 Sin[6.] + 2.5}]}, {
             Red, Thick, 
              
              Line[{{$CellContext`t0$$, 0, 0}, {$CellContext`t0$$, 0, 
                 0.25 Sin[2 $CellContext`t0$$ + 1] + 1}}]}}, {}], 
           If[$CellContext`revarea$$, {{
              Darker[Orange], 
              Text[
               Row[{"area = \[Pi] ", 
                 Style["f", Italic], "(", 
                 Style["x", Italic], 
                 Superscript[")", 2]}], {$CellContext`t0$$, 0, 
                0.25 Sin[2 $CellContext`t0$$ + 1] + 1.85}]}, {Red, Thick, 
              
              Line[{{$CellContext`t0$$, 0, 0}, {$CellContext`t0$$, 0, 
                 0.25 Sin[2 $CellContext`t0$$ + 1] + 1}}]}}, {}], {
            Text[
             Row[{
               Style["y", Italic], " = ", 
               Style["f", Italic], "(", 
               Style["x", Italic], ")"}], {4.45, 0, 1.2}], 
            If[
             Or[$CellContext`t0$$ == 1, $CellContext`t0$$ >= 1.35], 
             Text[
              Style["a", Italic], {0.95, 0, -0.15}], {}], 
            Text[
             Style["b", Italic], {4, 0, -0.15}], 
            Text[
             Style["x", Italic], {4.55, 0, 0}], 
            Text[
             Style["y", Italic], {0, 0, 2.6}]}, {
            RGBColor[0, 0, 0], 
            Line[{{0, 0, 0}, {5, 0, 0}}], 
            
            Line[{{0, 0, -4}, {0, 0, 
             4}}]}, $CellContext`leftend, $CellContext`rightend, 
           Line[{{1, 0, -0.04}, {1, 0, 0.04}}], 
           Line[{{4, 0, -0.04}, {4, 0, 0.04}}], 
           If[$CellContext`sec$$, {
             If[$CellContext`revarea$$, 
              Blend[{Yellow, LightPurple}], LightOrange], 
             Polygon[
              Prepend[
               
               Table[{$CellContext`t0$$, (0.25 Sin[2 $CellContext`t0$$ + 1] + 
                  1) Sin[-$CellContext`\[Theta]], (
                  0.25 Sin[2 $CellContext`t0$$ + 1] + 1) 
                 Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], 0, 2 
                 Pi, Pi/10}], {$CellContext`t0$$, 0, 0}]]}, {}], 
           If[$CellContext`revrad$$, {{Blue, 
              Text[
               Row[{"radius = ", 
                 Style["f", Italic], "(", 
                 Style["x", Italic], ")"}], {$CellContext`t0$$, 0, 
                0.25 Sin[2 $CellContext`t0$$ + 1] + 1.5}]}, {Blue, Thick, 
              
              Line[{{$CellContext`t0$$, 0, 0}, {$CellContext`t0$$, 0, 
                 0.25 Sin[2 $CellContext`t0$$ + 1] + 
                 1}}]}}, {}]}], $CellContext`curve2, $CellContext`comsolid2}, 
        PlotRange -> {{0, 4.5}, {-2, 2}, {-1.3, 2.5}}, 
        AxesOrigin -> {0, 0, 0}, Boxed -> False, 
        Axes -> {None, None, Automatic}, ViewPoint -> {1.5, -4, 0}, 
        Background -> White, ImageSize -> 450, Ticks -> {{1, 4}, None, None}, 
        BaseStyle -> 14], "Specifications" :> {{{$CellContext`sec$$, True, 
          Column[{"cross", "section"}]}, {
         False, True}}, {{$CellContext`t0$$, 2.5, " "}, 1, 4, ImageSize -> 
         Tiny, Enabled -> Dynamic[$CellContext`sec$$]}, 
        "\n", {{$CellContext`revrad$$, False, 
          Column[{"radius"}]}, {
         False, True}}, {{$CellContext`revarea$$, False, 
          Column[{"area"}]}, {False, True}}, {{$CellContext`revvol$$, False, 
          Column[{"volume"}]}, {False, True}}}, 
      "Options" :> {ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{630., {254., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({{
        Attributes[Superscript] = {
          NHoldRest, ReadProtected}, $CellContext`leftend = {
           Opacity[0.3], 
           
           Polygon[{{1, 0, 0}, {1, 0, 1.0352800020149668`}, {
             1, -0.2679501815352494, 1.000003691386855}, {
             1, -0.5176400010074834, 0.8965787817749661}, {
             1, -0.7320535098516056, 0.7320535098516056}, {
             1, -0.8965787817749661, 0.5176400010074834}, {
             1, -1.000003691386855, 0.2679501815352494}, {
             1, -1.0352800020149668`, 0}, {
             1, -1.000003691386855, -0.2679501815352494}, {
             1, -0.8965787817749661, -0.5176400010074834}, {
             1, -0.7320535098516056, -0.7320535098516056}, {
             1, -0.5176400010074834, -0.8965787817749661}, {
             1, -0.2679501815352494, -1.000003691386855}, {
             1, 0, -1.0352800020149668`}, {
             1, 0.2679501815352494, -1.000003691386855}, {
             1, 0.5176400010074834, -0.8965787817749661}, {
             1, 0.7320535098516056, -0.7320535098516056}, {
             1, 0.8965787817749661, -0.5176400010074834}, {
             1, 1.000003691386855, -0.2679501815352494}, {
             1, 1.0352800020149668`, 0}, {
             1, 1.000003691386855, 0.2679501815352494}, {
             1, 0.8965787817749661, 0.5176400010074834}, {
             1, 0.7320535098516056, 0.7320535098516056}, {
             1, 0.5176400010074834, 0.8965787817749661}, {
             1, 0.2679501815352494, 1.000003691386855}, {
             1, 0, 1.0352800020149668`}}]}, $CellContext`rightend = {
           Opacity[0.3], 
           
           Polygon[{{4, 0, 0}, {4, 0, 1.1030296213104391`}, {
             4, -0.2854850733073629, 1.065444798385604}, {
             4, -0.5515148106552196, 0.9552516731815694}, {
             4, -0.779959725078241, 0.779959725078241}, {
             4, -0.9552516731815694, 0.5515148106552196}, {
             4, -1.065444798385604, 0.2854850733073629}, {
             4, -1.1030296213104391`, 0}, {
             4, -1.065444798385604, -0.2854850733073629}, {
             4, -0.9552516731815694, -0.5515148106552196}, {
             4, -0.779959725078241, -0.779959725078241}, {
             4, -0.5515148106552196, -0.9552516731815694}, {
             4, -0.2854850733073629, -1.065444798385604}, {
             4, 0, -1.1030296213104391`}, {
             4, 0.2854850733073629, -1.065444798385604}, {
             4, 0.5515148106552196, -0.9552516731815694}, {
             4, 0.779959725078241, -0.779959725078241}, {
             4, 0.9552516731815694, -0.5515148106552196}, {
             4, 1.065444798385604, -0.2854850733073629}, {
             4, 1.1030296213104391`, 0}, {
             4, 1.065444798385604, 0.2854850733073629}, {
             4, 0.9552516731815694, 0.5515148106552196}, {
             4, 0.779959725078241, 0.779959725078241}, {
             4, 0.5515148106552196, 0.9552516731815694}, {
             4, 0.2854850733073629, 1.065444798385604}, {
             4, 0, 1.1030296213104391`}}]}, $CellContext`curve2 = 
         Graphics3D[{{{}, {}, {
              RGBColor[0, 0, 0], 
              AbsoluteThickness[1.75], 
              Line[CompressedData["
1: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
qyoOW9AfMNF/Ac5zqPo=
               "]]}}}, {
           Axes -> True, 
            PlotRange -> {{0.5000000816326531, 4.499999918367347}, {-1., 
             1.}, {0.750000046555301, 1.249999839700148}}, PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}], 
         Attributes[PlotRange] = {ReadProtected}, $CellContext`comsolid2 = 
         Graphics3D[
           GraphicsComplex[CompressedData["
1:eJxtnHlYTV/7xlMZMmYKCSFlnjJWekoazJGhjAkRMmUekpnIEBIyFCVShEzV
WSWVoq8iSWmeTmmOzPzWau21vNav95/vde3r2J312c+6n/t+zl5vd7s105cq
KigotFZWUFDC/9U5v3+0gkIlhCl232418LLskscnv90nKuG+f2jzh441YHN8
W0rwzwuyB2vbNZ4cVgbGD6uyHNNroWKX9tuIAedk83s9f7YuogT+i9a5pzX+
O7Rea6VxxOSs7L3Cuy8XHsphbvL8A+kPfsGHZSE5oR4eMmX9bVUKCnLYUBXX
f7y7gtFSrWvqZ8zOys7uSz2R8kQOT74u8dAar2gUseBJRwvdczKPqC5O02JK
QKHuf8pGqx8vXfRAyUs2T37jv8ioMjBrfMEh/UFDozmDraxPDL8sW/5mXK3N
6Uo42nLEmweOjY2azXa77qTuLfNsbOv5q181vG6fZOCupWK06+zI6M36PrIp
WT+aqC6sgY5dVvk5pjc10rZveMEtzkf2rn2qRaPaGlig1Vh1vHtzo5FL5+c1
CPCRLWym3NT9bQ1c6+ezVWt8S6OyiVVN5xZ4yxrtO6DmrlQDpUPH5P3508po
8ug7NjZeV2T2o8/sVPSrAsZ5fMDuM27oA7rk1Pi45vsyzrnNHptFDxLeI2Nr
i5x18SWcs/GhxcEfRrxDGj2OftRXl3POXsusMwrWv0UPh8bP+j6ukHN+ZB/e
w/1NMnqsfL/9scsFnPPRF0W97218iwxcc9rmmRdyztsGdnT9rP8OVaa73jnQ
Tc45p+7u93Rg8nsU02OTd5+kEs6588r7eaNjPqB2QYNGt8wu45wP9BmYe/dw
FhrlYGs6aWEl5/x75Mx2015lo9EXNJM+O1Vxzj2vHlWdNj0H2c2Py/76o4pz
brSp8RqdETnIwere8tDMKs55T8N5Y0t3ZaM5q/vaHuxexTnLAje69vPORIO/
Jd/rl1DBOfcxuuv8uLAYvXjkF/D6ev7fenZtE3oYitDe/C7+g11zOecdd3Xv
zCjJR42UCn6UB2ZzzhHXTDppWuWh7b5mu5e+zuSc3x1v6nsqKhcd+dXp4bqy
DM754828uX4z89CiKAvjVSmZnPM8L0vL0vJ8tOTXir2ewdmcc5yOQdsFpkXo
wvHYpynHcjlne5/oy2GlxSg99lT7S7fyOWctU/v7vVaUoh6q/9lW+BdyzsHf
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
OSrldbsh/Lv24ymlyGGOamiASTqv265PBicSP223adkZ4q9ZfRZsjcpstaAY
Xfzqr4JWp/I6bDtk19DnLYrQIy//jxOGpfB68zY4FKIUV4COy3pbOP9I5nVl
OtL+hUt8AUpvkj297Gcyrx+Fi0X7v7cuQsERhddnjkrhdaJrWasxfEkx2nX1
4+SbG1J5PaCmSbL7M0vR4rdx65dOSOfPvXCP0/mBCypQ7JzrzceOyOTPV3VM
ZfXZr5Uo/m4HnZ3W2fw56p/NCXj6ogopHbAIzeqZw5+Xy4kRC5YqViONpWv/
OFvn8OfyeHloj0vuVWh25TLzlNJszr9bhu6MTOybtSK/biM+mvG3nTQ2+xrO
2z9vz9waLs/i/FM3Z4Dxygrkdv15zRR3Nxnj39rMdkh3nBttkkxrXHH/ZPyz
F4YPztApRXcM5leruLjKGP8XJh18tnsUI8sJE3Omtj8kY/z1ezrfVB4oRxmd
z9U0fXpAxvj33+d6NWCQHCXkBrY4F3VAxvj7NVvXTOtCMZposHTA3U6HZIy/
v/2tubcHlqJSmcPajQdcZYy/V58KqwZOFeh0o8fzz59zkzH+k1VOqKxYXoUU
22xVs7U7IWP8uziZ2/dIqUZuzkMmn31yUsb4+23La7Y3ogZ9Cu+XN+isu4zx
jzw0qrPOrxpknrBc0yTRXcb4T5k285za7hp0TmW4tvNcdxnjv+t0gi3Jh4vX
q4f1xn2S8bd/aj77qV01anVs27c/k0/KGH/nWzMjHuH6f6c9Z2mgSTr34b/O
0vnIIoXibVYDj8sY/34XYveQ+j816dbBiNWpiPHX+VKYGYvr/1pQstmkYSmI
8R979bA9qf+8tnondv1IRox/q1F2O0j9N4prfKH8ZzJi/Pf0MxpK6r9jw+lK
s0elIMb/Ze/8iGG4/vX2TnwZsCEVMf4Z19tYk/o/ELejy7IJ6YjxH30qpDep
//zljQtMRmQixt9yq30Iqf/Tz25oO1tnI8Z/RLc5K0n97/I0i83umYMY/w8/
5Bqk/qv1fVu6WGOdlvgHaSnlXcT1n7dDxfJdaTbPNRl6dA5Sa+duY+N1Qsb4
N9w05BqpfxUVWIVwv2L8owy3K5O++ex7zxVbTsg5/0jVXtFkblLcMur+UfQB
Mf7m18I2N8b9cX5eRRbuj5z/xKNhltPwfQ03LI/HfZDzVxmaOesN7ndF7T8N
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
IT0vxn8S5Q+9Jf7s7+6kfxch6e/+H6L7x/I=
            "], {{{
               EdgeForm[], 
               Opacity[0.3], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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

                  "]]}]}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1:eJxMXHdYju37r5CWFqKEJMksRRQ9V7RJS0bJKpRRVLISlWgobaWFlkpFyCi6
okhDkvagoT2Vigq/67ye+/s73r86jvt43ttzf67z/Izzuc93keUpkyNcHBwc
IlM5OKaQv/FdndcNDzfgFIl5D8KeRLK07shc+JDWi0+rZ9k7p9bjaSYp0Qn3
I1lTrppcCazrxRfenQ0IC6/CgsGjoqXeUawtU/zE7Ab78PNlaiJFA4X4wrL5
VpzF0azqEPNNQrsGsHbc2O/9swzRSodHN5NSYlitZVcF//0bwKMy0ifrZIoQ
/5Fpfy7nR7P81nCFbN8xgHmfepixkqvQmo4Nwr6uUayvslKOun19eIZJoVHr
43q0eOfxGoXFkayttrkzeWp7cUvfRhvJQw2ocPGv+P60SFZe1eiS4PRefHT2
gMnX9zXI6/3whuFjUSzvQwvrldz68OFbSera98qQ+I3HwoXu0az01cGnotr7
sbycf/SDggyEOSW25VnGsARfatat7x3A/os4Wl4LvMV3+ZeemmoWw7J/V3lO
Jn0A190yVwmc/IK3G1vk6xVEsQQvnj+59Wg/bhXp4N7jVYfr3Ef2DAhEsWwi
Xq2sX9CHG/7kU5y1vjRuGGupQbaCOZefV3XhebufngacdxuUq1Tw1qLVofYL
RP514X/BVoGAs9HSv5+HxmuR7aJ5e4/97sa/M1KEAWeHaOsXemvqkW2wQPOd
jb142oE3U44QnOMfnRjJza9HP6yMnbIrevFyj8hjgHP6eS2rttX1iG/hG3EZ
lV7Mf2Kc4mx169Oz9b9qUVTSFtfg0W4cyl1tCDhHxF77cpmnFnFE/U5K/9OF
+y4HHwOcd+h2i99vrUG1welz7aq7sPCNamPAeWsLT6ltRC1a+HblqGJoN04a
Pk1xHrv96XZwWR0aS7e7plzdgyOibyYCztv5CtTCntSjKYUorettL94fdLQJ
cD59d3LLS5d65P17bNqkTy9WfC1BcT5bd+SQyqE6tPbxl4zbVj24pCCU4uy6
9YSGmFYt+p1uFBC2qRtfMXW7BjiHRv9p4z3ZjvL09llfb27GFtMcbAHnh3b9
MTP829G1nClZDn+a8TuZ2xRng2XqpttsOtDUBe2yGSkt2PI4vyDgHPT7ikv7
lU4U4pIV9MC7FS8NOXx7H8E5+d7+pXlTuxD+FZl7Z7gVL0+dT3G2HwgszHHp
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
o83wT2BIXzThH2x/Zb0n8E/zWnVVwP9c/3th4lfx9INWgcA/33n+Uf19bCQh
Q/gHh5ru4QD++R/+xgdmrXLoKcQvFv66BvhvY/jn44dliwj/YBOXubLAPy8Y
/c0b7FEl+ovfWn6yAv1dyfDPsGHjB5jLPPt0Mgz45/c+bpqPop+aqhH9xccu
6VqD/jZICM8B/EVW52Oiv3hPLPoI+ivH6O9qz00niP5i+SmTSqC/XIz+xtX0
aBH9xTOPut8A/f344hnFf5aLzm+iv/jDpX+NXER/PzH6O13rXjnRX1zFmaMP
+ivP6K9I6MUoor84+ZjhPNBfK0Z/Kyru8xP9xWuizg1dI/r7NFib6wrB/zjf
3mNEf7GG68vfRkR/F/5PfyOqjhL9xUZNHidAf70Y/Z06aGNE9Bdrb1SsKif6
G87ob9wuVWOiv3hT0DpR0F9h99nU/ytfePcG5i8Oz1V4gX8u1ihS/P1Ug+qI
/uL8+gfPQX8/Mf7zKNt/YnVnjo8Z5ddZ4oz++o/+fQLzGuG1O3aD/s5i/KfE
Auo/ceCnfXfeH/NkrWb8p+pO6j+x426+U+9tvFhqjP9UPEX9J34cZjFy8Lg3
6xjjPy+x/Se2k7o55aC1N+s94z9fsv0n/n4o8UDWIS/Wa8Z//mb7T2zRe81n
nqUny4bxn0/Y/hP/dR+sfVNynVXH+M9jbP+Jn54/92rW2HXWNMZ/OrP9J05e
UJn5YrEX6z7jP7vY/hNvSuWeJyfizfrN+E9Oe+o/MZriuHXOWW+WI+M/5fyo
/8TfD6puls/0Yv3Dyyj/5257VwBzmem8Z/aC/p5g/OdcQ+o/sepG/mOxiZ6s
eSeuXAP8P97t94b67+eduSCa5JfXjP+8wvaf+EbNp6ILSzxZKk5G1H9+bWj2
g/o/m3dOfD/JX+bu7XQ+4Cc8YxbJX/jLTZNTkL9Mak41Av5tu8LeQv33XVcv
hPz1gMlf7fwNUVD/Szj5pJVJ/jLetVsd8F++ZkSf5C8sfSjJFfKX1QlFiv+S
S+PSJH/h26kSHGtI/prL5K+2My+6of6fdm6ugvwVIDT2DvC/YCW1F+q/80lJ
MuSvNTPOcEL9cwoWvoL6/13ScQfy16Cifg7gv2KJ7yuo/7EKxL2D5K/f2ebL
AP+SwvlJUP/zF+kch/y13y6N+h/RVKlEqP+JM9mPIH8JMP7zHtt/Yr3A7PNz
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
x0YuA3K9PJPrnSW3JRgQPW1OuWsHuV6eyfVnb884QHI9HnC9wAV7vbvn+NC9
6UahRZYk1+Puf19LIddLitym9da3RGAJyfVYcN6D/ZDr5Zlcv2Bv2HGS6/Gf
UZ4HkOvlmVyfMcqR/ZzoqdWltc8h11swuX5z6srqdqKnIy2j45Drr8+2LLs0
9wtqy9jeVbayAvEuq48VI332Y8iZ154fo9fzhaIsJirQzxj+2yoTfbhBqjka
8T3H112OXd81oxKph1kc6JrVj2t159P7KBzY2psf3oZ+my8Yzgtvw6L7Q6bB
fSZLXFO/OrWj6tsJyY1O7djPseg23Ccqg+O7pHc78j3K0TzPux2fqvQuhfuM
7no2dw7JHQuWndQrXVmBM0eqeOA+NzT5RFUn+lDeFb9Os4kKzG0WEAv3sTng
UUu+BxrY/L14x4xK3BiKy+E+4a1bn2eY9aMyoz1cLnuz0bMZxhOnyX3O5Rbv
PBYwgIRj9E4FOL5CV0crw+A+Kz68Uz/zgFyXWOc1eOMV4omtos+1w2z2nuMN
Xehg09/dLagJeW4Omw7fRzzsE9fKtm70735iu1p7EzJZ5Uifq97mcofyZDe6
r7n7xIufTaiy+fBnuM9P3bqOZvLfT22zj4H7+W82pvhMOztoD//9pY/y+nC/
rT/r7sJ9pN2yfz4n/33PQM+a9eR+4jJWFXCfh3kvvp0nzzP744938Hz3k2Q5
4T4d6UukfcnzLOdYfwSe7wDPYnqfUPdKg17yPEk3Ow3h+a56v/oI97n1hFPv
E8H3y5BULzl3JDo8g557ySP7QXOC77PuxlZy7uj6dLNIuM8iHq56U4LvhxMr
UgDvrzrsc9eRijQm545x1Ec/ev4aOgJwnztDD/jJueNE251b4fxXObDPfZs4
3kLOHUdybnGH8/djDZTAfYz0q8qg/oSt37SR74W4HSv54D5PSlcVQP31zFQP
2UvqseDU3AS4z8kx7Av1Z3D/svtOUo8Lb86kz/UzLrmM4ILLsiw2nN2bjQeX
qtPzMj84YUdwwdtFuY56O77C7vNOJ8F9fFt8zQgu2FDAJ7Lrxiscm77zE9zH
t3l5MTknfGqt7j1ybniFBv8UuM/NY8+dyTnhIg8LWXJuuHuBRgjch/fZ04Pk
nPDhqTdSyLlhFStdis/D40/vkrrBGoNXlsP9pms0Upw1pTsVWOS/H4mTrFhB
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
0tXZZf/2XtZ7kL0Ao9u/5w==
             "]], {
           Axes -> True, Method -> {}, 
            PlotRange -> {{1.0000002142857143`, 
             3.9999997857142855`}, {-1.2493048728288587`, 
             1.2493048728288587`}, {-1.2493048728288902`, 
             1.2493048728287643`}}, PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}; ($CellContext`curve2 = 
         ParametricPlot3D[{$CellContext`x, 0, 0.25 Sin[2 $CellContext`x + 1] + 
            1}, {$CellContext`x, 0.5, 4.5}, PlotStyle -> {
             RGBColor[0, 0, 0], 
             AbsoluteThickness[1.75]}]; $CellContext`comsolid2 = 
         RevolutionPlot3D[
          0.25 Sin[2 $CellContext`t + 1] + 
           1, {$CellContext`t, 1, 4}, {$CellContext`\[Theta], 0, 2 Pi}, 
           RevolutionAxis -> {1, 0, 0}, PerformanceGoal -> "Quality", Mesh -> 
           None, PlotStyle -> Opacity[0.3]]; $CellContext`leftend = {
           Opacity[0.3], 
           Polygon[
            Prepend[
             
             Table[{1, (0.25 Sin[3] + 1) 
               Sin[-$CellContext`\[Theta]], (0.25 Sin[3] + 1) 
               Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], 0, 2 Pi, 
               Pi/12}], {1, 0, 0}]]}; $CellContext`rightend = {
           Opacity[0.3], 
           Polygon[
            Prepend[
             
             Table[{4, (0.25 Sin[9] + 1) 
               Sin[-$CellContext`\[Theta]], (0.25 Sin[9] + 1) 
               Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], 0, 2 Pi, 
               Pi/12}], {4, 0, 0}]]})}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 7585.},
 CellChangeTimes->{3.760817704394403*^9},
 CellID->253619128,ExpressionUUID->"6fab846e-7495-4085-beba-fc3bad9be016"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The First Washer Demo", "Chapter",
 CellChangeTimes->{{3.8225755954538536`*^9, 3.822575595876113*^9}, {
  3.822575961052005*^9, 
  3.822575970026726*^9}},ExpressionUUID->"7744f3d5-e8f4-456b-be6b-\
3e32dbde87fd"],

Cell["\<\
Credits: https://demonstrations.wolfram.com/SolidOfRevolution/ \
\>", "Text",
 CellChangeTimes->{{3.822575974314578*^9, 
  3.822575981522668*^9}},ExpressionUUID->"aefcbc2a-830e-4349-a1b7-\
a4068198415a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"curverev1", ",", "curve2low", ",", "\n", 
       RowBox[{"Graphics3D", "[", "\n", 
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", 
               RowBox[{"-", ".04"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", ".04"}], "}"}]}], "}"}], "]"}], ",",
           "\n", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4", ",", "0", ",", 
               RowBox[{"-", ".04"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "0", ",", ".04"}], "}"}]}], "}"}], "]"}], ",",
           "\n", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< = \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<(\>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<)\>\""}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"4.75", ",", "0", ",", "1.2"}], "}"}]}], "]"}], ",", 
            "\n", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\< = \>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<g\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<(\>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<)\>\""}], "}"}], "]"}], ",", "14"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"4.75", ",", "0", ",", ".55"}], "}"}]}], "]"}], ",", 
            "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Theta]1", "<", 
                RowBox[{"\[Pi]", "/", "2"}]}], "||", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Not", "[", "solidrev1", "]"}], "&&", 
                 RowBox[{"\[Theta]1", ">", "\[Pi]"}]}], ")"}]}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{".95", ",", "0", ",", 
                  RowBox[{"-", ".25"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Theta]1", "<", 
                RowBox[{"\[Pi]", "/", "2"}]}], "||", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Not", "[", "solidrev1", "]"}], "&&", 
                 RowBox[{"\[Theta]1", ">", "\[Pi]"}]}], ")"}]}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<b\>\"", ",", "Italic"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "0", ",", 
                  RowBox[{"-", ".25"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"5.2", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", "\n", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], 
          ",", "\n", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"5", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "4"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "4"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], ",", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"regionrev1", "&&", 
               RowBox[{"Not", "[", "solidrev1", "]"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
              "regionrev1", " ", "&&", " ", "solidrev1", " ", "&&", " ", 
               RowBox[{"\[Theta]1", "<", 
                RowBox[{"2", "\[Pi]"}]}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", "None", "]"}], ",", "LightBlue", ",", 
              RowBox[{"Polygon", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "+", "1"}], 
                    ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "+", "1"}], 
                    ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]1"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "1", ",", "4", ",", ".015"}], "}"}]}], 
                  "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".15", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "+", ".5"}], 
                    ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".15", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "+", ".5"}], 
                    ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]1"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "4", ",", "1", ",", 
                    RowBox[{"-", ".015"}]}], "}"}]}], "]"}]}], "]"}], "]"}]}],
              "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"solidrev1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{"washtran", ",", 
                RowBox[{"Opacity", "[", ".75", "]"}], ",", 
                RowBox[{"Opacity", "[", "1", "]"}]}], "]"}], ",", 
              RowBox[{"Polygon", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", "9", "]"}]}], "+", "1"}], ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", "9", "]"}]}], "+", "1"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", "\[Theta]1", ",", 
                    RowBox[{"\[Pi]", "/", "100"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".15", 
                    RowBox[{"Cos", "[", "9", "]"}]}], "+", ".5"}], ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".15", 
                    RowBox[{"Cos", "[", "9", "]"}]}], "+", ".5"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "\[Theta]1", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], "/", "100"}]}], "}"}]}], "]"}]}], 
                "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"solidrev1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{"washtran", ",", 
                RowBox[{"Opacity", "[", ".75", "]"}], ",", 
                RowBox[{"Opacity", "[", "1", "]"}]}], "]"}], ",", 
              RowBox[{"Polygon", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", "3", "]"}]}], "+", "1"}], ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".25", 
                    RowBox[{"Sin", "[", "3", "]"}]}], "+", "1"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", "\[Theta]1", ",", 
                    RowBox[{"\[Pi]", "/", "100"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".15", 
                    RowBox[{"Cos", "[", "3", "]"}]}], "+", ".5"}], ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{".15", 
                    RowBox[{"Cos", "[", "3", "]"}]}], "+", ".5"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "\[Theta]1", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], "/", "100"}]}], "}"}]}], "]"}]}], 
                "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\n", "}"}], "]"}], ",", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"solidrev1", ",", 
         RowBox[{"RevolutionPlot3D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{".25", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", "t"}], "+", "1"}], "]"}]}], "+", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", "\[Theta]1"}], "}"}], ",", 
           RowBox[{"RevolutionAxis", "->", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"If", "[", 
             RowBox[{"washtran", ",", 
              RowBox[{"Opacity", "[", ".5", "]"}], ",", 
              RowBox[{"Opacity", "[", "1", "]"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}], ",", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"solidrev1", "&&", "washtran"}], ",", 
         RowBox[{"RevolutionPlot3D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{".15", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", "t"}], "+", "1"}], "]"}]}], "+", ".5"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", "\[Theta]1"}], "}"}], ",", 
           RowBox[{"RevolutionAxis", "->", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"Opacity", "[", "1", "]"}]}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "\n", "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.3"}], ",", "1.3"}], "}"}]}], "}"}]}], ",", "\n", 
     RowBox[{"AxesOrigin", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Boxed", "->", "False"}], ",", 
     RowBox[{"Axes", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"ViewPoint", "->", 
      RowBox[{"{", 
       RowBox[{"1.5", ",", 
        RowBox[{"-", "4"}], ",", "0"}], "}"}]}], ",", 
     RowBox[{"Background", "->", "White"}], ",", 
     RowBox[{"ImageSize", "->", 
      RowBox[{"{", 
       RowBox[{"450", ",", "450"}], "}"}]}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", "None", ",", "None"}], "}"}]}], 
     ",", 
     RowBox[{"BaseStyle", "->", "14"}]}], "]"}], "\n", ",", "\n", "Delimiter",
    ",", "\n", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"regionrev1", ",", "True", ",", "\"\<region\>\""}], "}"}], 
          ",", "Checkbox"}], "}"}], "]"}], ",", "\n", 
       RowBox[{"Spacer", "[", "15", "]"}], ",", "\n", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"solidrev1", ",", "True", ",", "\"\<solid\>\""}], "}"}], 
          ",", "Checkbox"}], "}"}], "]"}], ",", "\n", 
       RowBox[{"Spacer", "[", "15", "]"}], ",", "\n", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"washtran", ",", "False", ",", "\"\<transparent\>\""}], 
           "}"}], ",", "Checkbox"}], "}"}], "]"}], ","}], "\n", "}"}], "}"}], 
    "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", "\[Pi]", ",", "\"\<rotate\>\""}], "}"}], ",", 
     ".0001", ",", 
     RowBox[{"2", "\[Pi]"}], ",", 
     RowBox[{"Enabled", "->", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"(", 
        RowBox[{"regionrev1", "||", "solidrev1"}], ")"}], "]"}]}]}], "}"}], 
   ",", "\n", 
   RowBox[{"Initialization", ":>", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"curve2low", "=", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", 
           RowBox[{
            RowBox[{".15", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "+", ".5"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", ".5", ",", "4.5"}], "}"}], ",", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "1.75", "]"}]}], "}"}]}]}], 
        "]"}]}], ";", 
      RowBox[{"curverev1", "=", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", 
           RowBox[{
            RowBox[{".25", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "+", "1"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", ".5", ",", "4.5"}], "}"}], ",", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "1.75", "]"}]}], "}"}]}]}], 
        "]"}]}]}], ")"}]}], ",", "\n", 
   RowBox[{"SaveDefinitions", "->", "True"}], ",", 
   RowBox[{"AutorunSequencing", "->", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 9507.},
 CellChangeTimes->{{3.446648301802371*^9, 3.4466485439505634`*^9}, {
   3.4466486386667585`*^9, 3.446648679345251*^9}, {3.4466487284158115`*^9, 
   3.446648750046915*^9}, {3.446648789343421*^9, 3.446648978845912*^9}, {
   3.4466490542443295`*^9, 3.446649105357827*^9}, {3.4466491448646355`*^9, 
   3.4466492300471215`*^9}, {3.4466492728086095`*^9, 3.446649277655579*^9}, {
   3.4466493118347263`*^9, 3.446649341917984*^9}, {3.446649376948355*^9, 
   3.446649392040056*^9}, {3.446649524210107*^9, 3.446649552570888*^9}, {
   3.4466496057473516`*^9, 3.4466496232925806`*^9}, {3.446650452845419*^9, 
   3.446650504319435*^9}, {3.4466507865452557`*^9, 3.4466508108902626`*^9}, 
   3.446651818679392*^9, {3.446652109177107*^9, 3.4466521109897137`*^9}, {
   3.446658617585739*^9, 3.4466586800856094`*^9}, {3.446658714184642*^9, 
   3.4466590364380193`*^9}, {3.4466590866201773`*^9, 
   3.4466591149108577`*^9}, {3.446659147107154*^9, 3.4466592718665485`*^9}, {
   3.446659324492221*^9, 3.4466594379954305`*^9}, {3.4466594836410656`*^9, 
   3.4466595759437904`*^9}, {3.446659664481101*^9, 3.4466598095296707`*^9}, {
   3.446659840113648*^9, 3.446659851560107*^9}, {3.4466598822141857`*^9, 
   3.446659899819501*^9}, 3.446659965944584*^9, {3.446660018029478*^9, 
   3.4466600374674287`*^9}, {3.446660126044797*^9, 3.446660162056579*^9}, {
   3.44666030417093*^9, 3.446660321005136*^9}, {3.446660405176168*^9, 
   3.4466604098629074`*^9}, {3.4466604526043663`*^9, 3.44666046089629*^9}, {
   3.446660523275987*^9, 3.4466606429981394`*^9}, {3.4466606834463005`*^9, 
   3.446660690756813*^9}, {3.446660816267288*^9, 3.4466608317996225`*^9}, {
   3.446660892006195*^9, 3.446660912405528*^9}, {3.4466609906981072`*^9, 
   3.4466609984392385`*^9}, {3.4466610449060545`*^9, 3.446661103059675*^9}, {
   3.4466612193869457`*^9, 3.446661242550253*^9}, {3.4466612864533825`*^9, 
   3.4466612870542464`*^9}, {3.4466642187398033`*^9, 
   3.4466642340317917`*^9}, {3.446664274259637*^9, 3.4466643053743773`*^9}, {
   3.4466644089733458`*^9, 3.4466644125084286`*^9}, {3.446664449922227*^9, 
   3.4466644764503727`*^9}, {3.4466647947881203`*^9, 
   3.4466647989941683`*^9}, {3.4466648621650033`*^9, 
   3.4466648954528685`*^9}, {3.4466651363192177`*^9, 
   3.4466651373206577`*^9}, {3.4466660244963536`*^9, 
   3.4466660785240417`*^9}, {3.446666260726035*^9, 3.4466662846404223`*^9}, {
   3.446666537473979*^9, 3.446666616757984*^9}, {3.4466668800265455`*^9, 
   3.4466669135848*^9}, 3.4466796795713873`*^9, {3.4466800825708723`*^9, 
   3.4466801352566304`*^9}, {3.4466801874316545`*^9, 3.446680244463662*^9}, {
   3.446680494713504*^9, 3.446680495144123*^9}, 3.446680569270712*^9, {
   3.4466814561159325`*^9, 3.446681464437899*^9}, {3.4468126315003023`*^9, 
   3.446812681091611*^9}, {3.4468127236928687`*^9, 3.446812743401208*^9}, {
   3.4468128322389507`*^9, 3.4468128329800158`*^9}, {3.4468129205659585`*^9, 
   3.4468129494274592`*^9}, {3.4468129831058865`*^9, 3.446812989284771*^9}, {
   3.446813320170562*^9, 3.446813321182016*^9}, {3.4468135224113693`*^9, 
   3.44681354184932*^9}, {3.446819026565955*^9, 3.446819031362853*^9}, {
   3.446819199684888*^9, 3.446819243127355*^9}, {3.446819282153472*^9, 
   3.4468193086916323`*^9}, {3.4468193620583696`*^9, 
   3.4468193901587763`*^9}, {3.446819429194907*^9, 3.4468194330103936`*^9}, {
   3.4468195135361843`*^9, 3.4468195582104225`*^9}, {3.4468312520753746`*^9, 
   3.446831253247059*^9}, {3.4468575670502367`*^9, 3.446857665772192*^9}, {
   3.446857701493557*^9, 3.446857701884118*^9}, {3.4468578107606754`*^9, 
   3.4468578302286687`*^9}, {3.446858272314357*^9, 3.44685829421585*^9}, {
   3.4468583569760942`*^9, 3.446858722661925*^9}, {3.4468587599255075`*^9, 
   3.4468588659780035`*^9}, {3.4468589303605804`*^9, 3.446858976386763*^9}, {
   3.446859239304821*^9, 3.446859241568075*^9}, {3.446919948610515*^9, 
   3.446919948800789*^9}, {3.457965416957087*^9, 3.457965474277855*^9}, {
   3.4579655507889843`*^9, 3.4579655827625103`*^9}, 3.457965730894887*^9, {
   3.4579657817803583`*^9, 3.457965803926907*^9}, {3.457965858339162*^9, 
   3.4579658625911083`*^9}, {3.457966019140294*^9, 3.4579660428261137`*^9}, {
   3.457966086117598*^9, 3.4579660900695753`*^9}, {3.457966142834482*^9, 
   3.457966153763098*^9}, 3.4579661965574503`*^9, {3.458007267890812*^9, 
   3.458007268486264*^9}, {3.4580074749049797`*^9, 3.458007486544456*^9}, {
   3.458007559835531*^9, 3.4580075853974333`*^9}, {3.458007616111787*^9, 
   3.458007624370489*^9}, {3.458263008817388*^9, 3.458263016902759*^9}, {
   3.4582989736602917`*^9, 3.458298991779359*^9}, {3.45829906922884*^9, 
   3.45829914947434*^9}, {3.458299186043572*^9, 3.4582991882564707`*^9}, {
   3.458299223093935*^9, 3.4582992423191967`*^9}, {3.4582993612444696`*^9, 
   3.458299394109145*^9}, {3.458299476555637*^9, 3.458299504451213*^9}, {
   3.458299593513131*^9, 3.458299597223605*^9}, {3.458299856382648*^9, 
   3.458299861885051*^9}, {3.458299983434557*^9, 3.458299991693715*^9}, {
   3.458300061746532*^9, 3.45830022101569*^9}, {3.458300389905859*^9, 
   3.458300417085548*^9}, {3.458300604350876*^9, 3.458300618343309*^9}, {
   3.458300649622346*^9, 3.458300654356936*^9}, {3.458300794523069*^9, 
   3.458300811410005*^9}, 3.458300854427767*^9, {3.458301094805565*^9, 
   3.458301095788715*^9}, {3.45830155645223*^9, 3.458301601710569*^9}, {
   3.4583017133101892`*^9, 3.4583017223507757`*^9}, {3.458301939399412*^9, 
   3.458301943033839*^9}, 3.45830250173869*^9, {3.458407184443281*^9, 
   3.4584072129013357`*^9}, {3.4584073188781977`*^9, 3.458407329472027*^9}, {
   3.458407366635537*^9, 3.458407480152938*^9}, {3.4584076717812443`*^9, 
   3.458407790265189*^9}, {3.458407855468602*^9, 3.458407892393282*^9}, {
   3.4584079269918833`*^9, 3.4584079360976257`*^9}, {3.458407980501392*^9, 
   3.458408027800219*^9}, {3.458408084250883*^9, 3.4584081243820343`*^9}, {
   3.458408182770697*^9, 3.4584082144728937`*^9}, {3.458408524014969*^9, 
   3.458408580600346*^9}, {3.4584086227221603`*^9, 3.458408638413991*^9}, {
   3.458408692711934*^9, 3.458408861891968*^9}, {3.458408892398507*^9, 
   3.458408964709921*^9}, {3.459015361027687*^9, 3.459015362173779*^9}, {
   3.4592691392882843`*^9, 3.459269185331888*^9}, {3.459269267748129*^9, 
   3.459269276812035*^9}, {3.459365382192763*^9, 3.4593654990904512`*^9}, 
   3.459365805008426*^9, {3.459365835818426*^9, 3.459365837475426*^9}, {
   3.459365884713426*^9, 3.459366026310426*^9}, {3.459366058450426*^9, 
   3.459366157102251*^9}, {3.4593661955940995`*^9, 3.459366199879528*^9}, {
   3.4595326623637853`*^9, 3.4595327187078953`*^9}, 3.760801583992052*^9},
 CellID->105746839,ExpressionUUID->"6f1dba37-998c-4cd5-a5d7-234942201f87"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`regionrev1$$ = 
    False, $CellContext`solidrev1$$ = True, $CellContext`washtran$$ = 
    True, $CellContext`\[Theta]1$$ = 6.283185307179586, Typeset`show$$ = True,
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`regionrev1$$], True, "region"}, {True, False}}, {{
       Hold[$CellContext`solidrev1$$], True, "solid"}, {True, False}}, {{
       Hold[$CellContext`washtran$$], False, "transparent"}, {True, False}}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Spacer[15], 
          Manipulate`Place[2], 
          Spacer[15], 
          Manipulate`Place[3], Null}}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Theta]1$$], Pi, "rotate"}, 0.0001, 2 Pi}}, 
    Typeset`size$$ = {450., {222., 228.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`regionrev1$39712$$ = 
    False, $CellContext`solidrev1$39713$$ = 
    False, $CellContext`washtran$39714$$ = 
    False, $CellContext`\[Theta]1$39715$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`regionrev1$$ = 
        True, $CellContext`solidrev1$$ = True, $CellContext`washtran$$ = 
        False, $CellContext`\[Theta]1$$ = Pi}, "ControllerVariables" :> {
        Hold[$CellContext`regionrev1$$, $CellContext`regionrev1$39712$$, 
         False], 
        Hold[$CellContext`solidrev1$$, $CellContext`solidrev1$39713$$, False], 
        Hold[$CellContext`washtran$$, $CellContext`washtran$39714$$, False], 
        Hold[$CellContext`\[Theta]1$$, $CellContext`\[Theta]1$39715$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Show[{$CellContext`curverev1, $CellContext`curve2low, 
         Graphics3D[{
           Line[{{1, 0, -0.04}, {1, 0, 0.04}}], 
           Line[{{4, 0, -0.04}, {4, 0, 0.04}}], {
            Text[
             Row[{
               Style["y", Italic], " = ", 
               Style["f", Italic], "(", 
               Style["x", Italic], ")"}], {4.75, 0, 1.2}], 
            Text[
             Style[
              Row[{
                Style["y", Italic], " = ", 
                Style["g", Italic], "(", 
                Style["x", Italic], ")"}], 14], {4.75, 0, 0.55}], 
            If[
             Or[$CellContext`\[Theta]1$$ < Pi/2, 
              And[
               Not[$CellContext`solidrev1$$], $CellContext`\[Theta]1$$ > Pi]], 
             Text[
              Style["a", Italic], {0.95, 0, -0.25}], {}], 
            If[
             Or[$CellContext`\[Theta]1$$ < Pi/2, 
              And[
               Not[$CellContext`solidrev1$$], $CellContext`\[Theta]1$$ > Pi]], 
             Text[
              Style["b", Italic], {4, 0, -0.25}], {}], 
            Text[
             Style["x", Italic], {5.2, 0, 0}], 
            Text[
             Style["y", Italic], {0, 0, 1.5}]}, {
            RGBColor[0, 0, 0], 
            Line[{{0, 0, 0}, {5, 0, 0}}], 
            Line[{{0, 0, -4}, {0, 0, 4}}]}, 
           If[
            Or[
             And[$CellContext`regionrev1$$, 
              Not[$CellContext`solidrev1$$]], 
             
             And[$CellContext`regionrev1$$, $CellContext`solidrev1$$, \
$CellContext`\[Theta]1$$ < 2 Pi]], {
             EdgeForm[None], LightBlue, 
             Polygon[
              Join[
               
               Table[{$CellContext`x, (0.25 Sin[2 $CellContext`x + 1] + 1) 
                 Sin[-$CellContext`\[Theta]1$$], (
                  0.25 Sin[2 $CellContext`x + 1] + 1) 
                 Cos[-$CellContext`\[Theta]1$$]}, {$CellContext`x, 1, 4, 
                 0.015}], 
               
               Table[{$CellContext`x, (0.15 Cos[2 $CellContext`x + 1] + 0.5) 
                 Sin[-$CellContext`\[Theta]1$$], (
                  0.15 Cos[2 $CellContext`x + 1] + 0.5) 
                 Cos[-$CellContext`\[Theta]1$$]}, {$CellContext`x, 4, 
                 1, -0.015}]]]}, {}], 
           If[$CellContext`solidrev1$$, {
             EdgeForm[None], 
             If[$CellContext`washtran$$, 
              Opacity[0.75], 
              Opacity[1]], 
             Polygon[
              Join[
               
               Table[{4, (0.25 Sin[9] + 1) 
                 Sin[-$CellContext`\[Theta]], (0.25 Sin[9] + 1) 
                 Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], 
                 0, $CellContext`\[Theta]1$$, Pi/100}], 
               
               Table[{4, (0.15 Cos[9] + 0.5) 
                 Sin[-$CellContext`\[Theta]], (0.15 Cos[9] + 0.5) 
                 Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], \
$CellContext`\[Theta]1$$, 0, (-Pi)/100}]]]}, {}], 
           If[$CellContext`solidrev1$$, {
             EdgeForm[None], 
             If[$CellContext`washtran$$, 
              Opacity[0.75], 
              Opacity[1]], 
             Polygon[
              Join[
               
               Table[{1, (0.25 Sin[3] + 1) 
                 Sin[-$CellContext`\[Theta]], (0.25 Sin[3] + 1) 
                 Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], 
                 0, $CellContext`\[Theta]1$$, Pi/100}], 
               
               Table[{1, (0.15 Cos[3] + 0.5) 
                 Sin[-$CellContext`\[Theta]], (0.15 Cos[3] + 0.5) 
                 Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], \
$CellContext`\[Theta]1$$, 0, (-Pi)/100}]]]}, {}]}], 
         If[$CellContext`solidrev1$$, 
          RevolutionPlot3D[
          0.25 Sin[2 $CellContext`t + 1] + 
           1, {$CellContext`t, 1, 4}, {$CellContext`\[Theta], 
            0, $CellContext`\[Theta]1$$}, RevolutionAxis -> {1, 0, 0}, 
           PerformanceGoal -> "Quality", Mesh -> None, PlotStyle -> 
           If[$CellContext`washtran$$, 
             Opacity[0.5], 
             Opacity[1]]], {}], 
         If[
          And[$CellContext`solidrev1$$, $CellContext`washtran$$], 
          RevolutionPlot3D[
          0.15 Cos[2 $CellContext`t + 1] + 
           0.5, {$CellContext`t, 1, 4}, {$CellContext`\[Theta], 
            0, $CellContext`\[Theta]1$$}, RevolutionAxis -> {1, 0, 0}, 
           PerformanceGoal -> "Quality", Mesh -> None, PlotStyle -> 
           Opacity[1]], {}]}, PlotRange -> {{0, 5}, {-2, 2}, {-1.3, 1.3}}, 
        AxesOrigin -> {0, 0, 0}, Boxed -> False, 
        Axes -> {None, None, Automatic}, ViewPoint -> {1.5, -4, 0}, 
        Background -> White, ImageSize -> {450, 450}, 
        Ticks -> {{1, 4}, None, None}, BaseStyle -> 14], 
      "Specifications" :> {
       Delimiter, {{$CellContext`regionrev1$$, True, "region"}, {True, False},
          ControlType -> Checkbox, ControlPlacement -> 
         1}, {{$CellContext`solidrev1$$, True, "solid"}, {True, False}, 
         ControlType -> Checkbox, ControlPlacement -> 
         2}, {{$CellContext`washtran$$, False, "transparent"}, {True, False}, 
         ControlType -> Checkbox, ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Spacer[15], 
           Manipulate`Place[2], 
           Spacer[15], 
           Manipulate`Place[3], Null}}], {{$CellContext`\[Theta]1$$, Pi, 
          "rotate"}, 0.0001, 2 Pi, Enabled -> Dynamic[
           Or[$CellContext`regionrev1$$, $CellContext`solidrev1$$]]}}, 
      "Options" :> {AutorunSequencing -> {2, 4}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{501., {278., 284.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({{$CellContext`curverev1 = Graphics3D[{{{}, {}, {
              GrayLevel[0], 
              AbsoluteThickness[1.75], 
              Line[CompressedData["
1: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
VRyyoD9gov8CvEuo+A==
               "]]}}}, {
           Axes -> True, 
            PlotRange -> {{0.5000000816326531, 4.499999918367347}, {-1., 
             1.}, {0.750000046555301, 1.249999839700148}}, PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}], 
         Attributes[PlotRange] = {ReadProtected}, $CellContext`curve2low = 
         Graphics3D[{{{}, {}, {
              GrayLevel[0], 
              AbsoluteThickness[1.75], 
              Line[CompressedData["
1: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
8Ky1hgyqE3g9d4J+/f0Lbu8TW/vlBwX9DzGKwzg=
               "]]}}}, {
           Axes -> True, 
            PlotRange -> {{0., 4.499999918367347}, {-1., 1.}, {
             0.3500000182717493, 0.6499999090862143}}, PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}; ($CellContext`curve2low = 
         ParametricPlot3D[{$CellContext`x, 0, 0.15 Cos[2 $CellContext`x + 1] + 
            0.5}, {$CellContext`x, 0.5, 4.5}, PlotStyle -> {Black, 
             AbsoluteThickness[1.75]}]; $CellContext`curverev1 = 
         ParametricPlot3D[{$CellContext`x, 0, 0.25 Sin[2 $CellContext`x + 1] + 
            1}, {$CellContext`x, 0.5, 4.5}, PlotStyle -> {Black, 
             AbsoluteThickness[1.75]}])}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 9507.},
 CellChangeTimes->{
  3.760801583992353*^9, {3.8225759466727753`*^9, 3.8225759536890235`*^9}},
 CellID->46805178,ExpressionUUID->"2753b571-69bf-489a-8dba-4093c6224d0f"]
}, {2}]],

Cell["\<\
Credits: https://demonstrations.wolfram.com/\
VolumeBetweenTwoSolidsOfRevolution/ 
note: for this one, change the upper limit and lower limit to make it seem \
like a disk is rotating\
\>", "Text",
 CellChangeTimes->{{3.822576164010843*^9, 
  3.8225761982025013`*^9}},ExpressionUUID->"5dc54ada-bb61-4355-a798-\
bb3389783b79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "g"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"\[Omega]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Xi]", " ", "x"}], " ", "+", " ", "\[Psi]"}], "]"}]}], 
        " ", "+", " ", "1"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"g", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Beta]", " ", "x"}], " ", "+", " ", "\[Chi]"}], "]"}]}], 
        " ", "+", " ", "\[Delta]", " ", "+", "0.55"}]}], ";", "\n", "\n", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"ParametricPlot3D", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", "0", ",", 
              RowBox[{"f", "[", "\[Tau]", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{"lowerLimitOfIntegration", "-", "0.25"}], ",", 
              RowBox[{"upperLimitOfIntegration", " ", "+", " ", "0.25"}]}], 
             "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", 
               RowBox[{"AbsoluteThickness", "[", "1.75", "]"}]}], "}"}]}]}], 
           "]"}], ",", 
          RowBox[{"ParametricPlot3D", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", "0", ",", 
              RowBox[{"g", "[", "\[Tau]", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{"lowerLimitOfIntegration", " ", "-", " ", "0.25"}], ",", 
              RowBox[{"upperLimitOfIntegration", " ", "+", " ", "0.25"}]}], 
             "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", 
               RowBox[{"AbsoluteThickness", "[", "1.75", "]"}]}], "}"}]}]}], 
           "]"}], ",", "\n", "\n", 
          RowBox[{"Graphics3D", "[", "\n", 
           RowBox[{"{", "\n", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"lowerLimitOfIntegration", ",", "0", ",", 
                  RowBox[{"-", ".05"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"lowerLimitOfIntegration", ",", "0", ",", ".05"}], 
                 "}"}]}], "}"}], "]"}], ",", "\n", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"upperLimitOfIntegration", ",", "0", ",", 
                  RowBox[{"-", ".05"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"upperLimitOfIntegration", ",", "0", ",", ".05"}], 
                 "}"}]}], "}"}], "]"}], ",", "\n", 
             RowBox[{"{", "\n", "\n", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<) = \>\"", ",", " ", 
                    RowBox[{"g", "[", "t", "]"}]}], "}"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"upperLimitOfIntegration", "+", "0.75"}], ",", "0",
                    ",", 
                   RowBox[{"(", 
                    RowBox[{"g", "[", "upperLimitOfIntegration", "]"}], 
                    ")"}]}], " ", "}"}]}], "]"}], ",", "\n", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<g\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<(\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<) = \>\"", ",", " ", 
                    RowBox[{"f", "[", "t", "]"}]}], "}"}], "]"}], ",", "14"}],
                   "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"upperLimitOfIntegration", "+", "0.75"}], ",", "0",
                    ",", 
                   RowBox[{"(", 
                    RowBox[{"f", "[", "upperLimitOfIntegration", "]"}], 
                    ")"}]}], " ", "}"}]}], "]"}], ",", "\n", "\n", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "+", "0.3"}], ",", "0", ",", "0"}], "}"}]}], 
                "]"}], ",", "\n", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "4.6"}], "}"}]}], "]"}]}], "\n",
               "}"}], ",", "\n", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0.5", ",", "0.25"}], "]"}], ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"8", "+", "0.2"}], ",", "0", ",", "0"}], "}"}]}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "4.5"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "4.5"}], "}"}]}], "}"}], 
                "]"}]}], "}"}], ",", "\n", "\n", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"planeForm", "&&", 
                  RowBox[{"Not", "[", "solidForm", "]"}]}], ")"}], "||", 
                RowBox[{"(", 
                 RowBox[{
                 "planeForm", " ", "&&", " ", "solidForm", " ", "&&", " ", 
                  RowBox[{"azimuthalAngle", "<", 
                   RowBox[{"2", "\[Pi]"}]}]}], ")"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"{", 
                   RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
                 "LightMagenta", ",", 
                 RowBox[{"Polygon", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Tau]", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"g", "[", "\[Tau]", "]"}], ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "azimuthalAngle"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"g", "[", "\[Tau]", "]"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "azimuthalAngle"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\[Tau]", ",", "lowerLimitOfIntegration", ",", 
                    "upperLimitOfIntegration", ",", ".0015"}], "}"}]}], "]"}],
                     ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Tau]", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"f", "[", "\[Tau]", "]"}], ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "azimuthalAngle"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"f", "[", "\[Tau]", "]"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "azimuthalAngle"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\[Tau]", ",", "upperLimitOfIntegration", ",", 
                    "lowerLimitOfIntegration", ",", 
                    RowBox[{"-", ".0015"}]}], "}"}]}], "]"}]}], "]"}], 
                  "]"}]}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", "\n", "\n", 
             RowBox[{"If", "[", 
              RowBox[{"solidForm", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"{", 
                   RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{"transparentForm", ",", 
                   RowBox[{"Opacity", "[", ".75", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}]}], "]"}], ",", 
                 RowBox[{"Polygon", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"upperLimitOfIntegration", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"g", "[", "upperLimitOfIntegration", "]"}], ")"}],
                     " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"g", "[", "upperLimitOfIntegration", "]"}], ")"}],
                     " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", "azimuthalAngle", ",", 
                    RowBox[{"\[Pi]", "/", "100"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"upperLimitOfIntegration", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"f", "[", "upperLimitOfIntegration", "]"}], ")"}],
                     " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"f", "[", "upperLimitOfIntegration", "]"}], ")"}],
                     " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "azimuthalAngle", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], "/", "100"}]}], "}"}]}], "]"}]}], 
                   "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", "\n", "\n", 
             RowBox[{"If", "[", 
              RowBox[{"solidForm", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"{", 
                   RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{"transparentForm", ",", 
                   RowBox[{"Opacity", "[", ".75", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}]}], "]"}], ",", 
                 RowBox[{"Polygon", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"lowerLimitOfIntegration", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"g", "[", "lowerLimitOfIntegration", "]"}], ")"}],
                     " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"g", "[", "lowerLimitOfIntegration", "]"}], ")"}],
                     " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", "azimuthalAngle", ",", 
                    RowBox[{"\[Pi]", "/", "100"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"lowerLimitOfIntegration", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"f", "[", "lowerLimitOfIntegration", "]"}], ")"}],
                     " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"f", "[", "lowerLimitOfIntegration", "]"}], ")"}],
                     " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "azimuthalAngle", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], "/", "100"}]}], "}"}]}], "]"}]}], 
                   "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}]}], "\n", "}"}], "]"}], ",", "\n", 
          "\n", 
          RowBox[{"If", "[", 
           RowBox[{"solidForm", ",", 
            RowBox[{"RevolutionPlot3D", "[", 
             RowBox[{
              RowBox[{"g", "[", "\[Tau]", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\[Tau]", ",", "lowerLimitOfIntegration", ",", 
                "upperLimitOfIntegration"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", "azimuthalAngle"}], "}"}], 
              ",", 
              RowBox[{"RevolutionAxis", "->", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
              RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
              RowBox[{"Mesh", "->", "None"}], ",", 
              RowBox[{"PlotStyle", "->", 
               RowBox[{"If", "[", 
                RowBox[{"transparentForm", ",", 
                 RowBox[{"Opacity", "[", ".5", "]"}], ",", 
                 RowBox[{"Opacity", "[", "1", "]"}]}], "]"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"solidForm", "&&", "transparentForm"}], ",", 
            RowBox[{"RevolutionPlot3D", "[", 
             RowBox[{
              RowBox[{"f", "[", "\[Tau]", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\[Tau]", ",", "lowerLimitOfIntegration", ",", 
                "upperLimitOfIntegration"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", "azimuthalAngle"}], "}"}], 
              ",", 
              RowBox[{"RevolutionAxis", "->", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
              RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
              RowBox[{"Mesh", "->", "None"}], ",", 
              RowBox[{"PlotStyle", "->", 
               RowBox[{"Opacity", "[", "1", "]"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\n", "\n", "}"}], ",", 
        RowBox[{"PlotRange", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", "\n", 
        RowBox[{"AxesOrigin", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Boxed", "->", "False"}], ",", 
        RowBox[{"Axes", "->", 
         RowBox[{"{", 
          RowBox[{"None", ",", "None", ",", "None"}], "}"}]}], ",", 
        RowBox[{"ViewPoint", "->", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", 
           RowBox[{"-", "4"}], ",", "0"}], "}"}]}], ",", 
        RowBox[{"Background", "->", " ", "White"}], ",", 
        RowBox[{"ImageSize", "->", 
         RowBox[{"{", 
          RowBox[{"450", ",", "450"}], "}"}]}], ",", 
        RowBox[{"BaseStyle", "->", "14"}]}], "]"}]}]}], "\n", "]"}], ",", 
   "\n", "\n", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<functions \>\"", ",", "Bold"}], "]"}], ",", "\n", 
   "Delimiter", ",", "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", "\"\<(\>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], ",", 
      "\"\<) = \[Omega] sin(\[Xi] \>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], ",", 
      "\"\< + \[Psi]) + 1\>\""}], "}"}], "]"}], ",", "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<g\>\"", ",", "Italic"}], "]"}], ",", "\"\<(\>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], ",", 
      "\"\<) = \[Alpha] cos(\[Beta] \>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], ",", 
      "\"\< + \[Chi]) + \[Delta] + 0.55\>\""}], "}"}], "]"}], ",", "\n", 
   "Delimiter", ",", "\n", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<visualization\>\"", ",", "Bold"}], "]"}], ",", "\n", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"planeForm", ",", "False", ",", "\"\<2D\>\""}], "}"}], 
            ",", "Checkbox"}], "}"}], "]"}], ",", "\n", 
         RowBox[{"Spacer", "[", "5", "]"}], ",", "\n", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"solidForm", ",", "False", ",", "\"\<3D\>\""}], "}"}], 
            ",", "Checkbox"}], "}"}], "]"}]}], "}"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "transparentForm", ",", "False", ",", "\"\<transparent\>\""}], 
             "}"}], ",", "Checkbox"}], "}"}], "]"}], ",", "\"\<\>\""}], "\n", 
        "}"}]}], "}"}], ",", 
     RowBox[{"Alignment", "->", "Right"}]}], "]"}], ",", "\n", 
   "\"\<azimuthal angle\>\"", ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"azimuthalAngle", ",", "4.0213", ",", "\"\<\>\""}], "}"}], ",", 
     "0.0001", ",", "6.2831", ",", ".0001", ",", 
     RowBox[{"ImageSize", "->", "Tiny"}], ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
     RowBox[{"Enabled", "->", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"(", 
        RowBox[{"planeForm", "||", "solidForm"}], ")"}], "]"}]}]}], "}"}], 
   ",", "\n", "Delimiter", ",", "\n", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<parameters\>\"", ",", "Bold"}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.3"}], "}"}], ",", "0", ",", "1", ",", 
     "0.05", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "->", " ", "Tiny"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "1.65"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3", ",", "0.05", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "->", " ", "Tiny"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Chi]", ",", "1.65"}], "}"}], ",", "0", ",", "2", ",", "0.05",
      ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "->", " ", "Tiny"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", "3"}], "}"}], ",", "2", ",", "3", ",", "0.05", 
     ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "->", " ", "Tiny"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "0.45"}], "}"}], ",", "0", ",", "0.5", ",", 
     "0.05", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "->", " ", "Tiny"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Xi]", ",", "0.9"}], "}"}], ",", 
     RowBox[{"-", "5"}], ",", "5", ",", "0.05", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "->", " ", "Tiny"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "1"}], "}"}], ",", "0", ",", "2", ",", "0.05", 
     ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "->", " ", "Tiny"}]}], "}"}], ",", "\n", 
   "\"\<lower limit of integration\>\"", ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lowerLimitOfIntegration", ",", "0", ",", "\"\<\>\""}], "}"}], 
     ",", "0", ",", "8", ",", "0.1", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "->", " ", "Tiny"}]}], "}"}], ",", "\n", 
   "\"\<upper limit of integration\>\"", ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"upperLimitOfIntegration", ",", "8", ",", "\"\<\>\""}], "}"}], 
     ",", 
     RowBox[{"lowerLimitOfIntegration", " ", "+", "0.1"}], ",", "8", ",", 
     "0.1", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "->", " ", "Tiny"}]}], "}"}], ",", "\n", 
   "Delimiter", ",", "\n", "\"\<volume of solid region: \>\"", ",", "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Dynamic", "[", "\n", 
       RowBox[{
        RowBox[{"(", 
         FractionBox["azimuthalAngle", 
          RowBox[{"2", " ", "\[Pi]"}]], ")"}], "*", "\n", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"\[Pi]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Beta]", " ", "\[Tau]"}], " ", "+", " ", 
                   "\[Chi]"}], "]"}]}], " ", "+", " ", "\[Delta]", " ", "+", 
                "0.55"}], ")"}], "2"]}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\[Tau]", ",", "lowerLimitOfIntegration", ",", 
              "upperLimitOfIntegration"}], "}"}], ",", 
            RowBox[{"AccuracyGoal", "->", "20"}]}], "]"}], " ", "-", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"\[Pi]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Omega]", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"\[Xi]", " ", "\[Tau]"}], " ", "+", " ", 
                   "\[Psi]"}], "]"}]}], " ", "+", " ", "1"}], ")"}], "2"]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
             "\[Tau]", ",", "lowerLimitOfIntegration", ",", 
              "upperLimitOfIntegration"}], "}"}], ",", 
            RowBox[{"AccuracyGoal", "->", "20"}]}], "]"}]}], ")"}]}], "\n", 
       "\n", "]"}], ",", " ", "\"\< cubic units\>\""}], "}"}], "]"}], ",", 
   "\n", 
   RowBox[{"ControlPlacement", "->", "Left"}]}], "\n", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 415.},
 CellChangeTimes->{{3.7145848755492167`*^9, 3.714584875877325*^9}, {
   3.7145854330419073`*^9, 3.714585496402066*^9}, {3.714585598887085*^9, 
   3.714585603402818*^9}, 3.7145856532092175`*^9, {3.7145856941732073`*^9, 
   3.714585697657682*^9}, 3.7145857607678375`*^9, {3.714585849393882*^9, 
   3.714585852003358*^9}, 3.714585896003894*^9, 3.7145869741186185`*^9, {
   3.7147459855948677`*^9, 3.7147459862968693`*^9}, {3.7147460611558013`*^9, 
   3.7147461179281025`*^9}, {3.714746170418596*^9, 3.714746293132015*^9}, {
   3.714746333655287*^9, 3.7147463901285887`*^9}, 3.714819716737281*^9, {
   3.714819818710437*^9, 3.714819861762822*^9}, {3.714820101806493*^9, 
   3.714820138501486*^9}, {3.714820214282988*^9, 3.714820222947074*^9}, {
   3.7148202908635473`*^9, 3.714820295581604*^9}, {3.7148203816646137`*^9, 
   3.7148204978882923`*^9}, {3.71482057593151*^9, 3.714820581947762*^9}, {
   3.714820622775725*^9, 3.7148206412697487`*^9}, 3.7148222668384867`*^9, {
   3.714832944805182*^9, 3.714832965546877*^9}, 3.71483303706705*^9, {
   3.714833081458898*^9, 3.71483308800694*^9}, {3.714833127190515*^9, 
   3.71483314089395*^9}, {3.714833605402567*^9, 3.71483360667034*^9}, {
   3.7148336413916492`*^9, 3.714833643221043*^9}, 3.760839912691049*^9},
 CellID->487977174,ExpressionUUID->"a5321d31-a2ef-47a3-93a4-ed441c438e6b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`azimuthalAngle$$ = 
    6.2831, $CellContext`lowerLimitOfIntegration$$ = 
    1.6, $CellContext`planeForm$$ = False, $CellContext`solidForm$$ = 
    True, $CellContext`transparentForm$$ = 
    True, $CellContext`upperLimitOfIntegration$$ = 
    3., $CellContext`\[Alpha]$$ = 0.1, $CellContext`\[Beta]$$ = 
    1.65, $CellContext`\[Delta]$$ = 3, $CellContext`\[Xi]$$ = 
    0.9, $CellContext`\[Chi]$$ = 1.65, $CellContext`\[Psi]$$ = 
    1, $CellContext`\[Omega]$$ = 0.45, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["functions ", Bold]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Style["f", Italic], "(", 
         Style["t", Italic], ") = \[Omega] sin(\[Xi] ", 
         Style["t", Italic], " + \[Psi]) + 1"}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Style["g", Italic], "(", 
         Style["t", Italic], ") = \[Alpha] cos(\[Beta] ", 
         Style["t", Italic], " + \[Chi]) + \[Delta] + 0.55"}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Style["visualization", Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`planeForm$$], False, "2D"}, {True, False}}, {{
       Hold[$CellContext`solidForm$$], False, "3D"}, {True, False}}, {{
       Hold[$CellContext`transparentForm$$], False, "transparent"}, {
      True, False}}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Spacer[5], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], ""}}, Alignment -> Right]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold["azimuthal angle"], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`azimuthalAngle$$], 4.0213, ""}, 0.0001, 6.2831, 
      0.0001}, {
      Hold[
       Style["parameters", Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Alpha]$$], 0.3}, 0, 1, 0.05}, {{
       Hold[$CellContext`\[Beta]$$], 1.65}, -3, 3, 0.05}, {{
       Hold[$CellContext`\[Chi]$$], 1.65}, 0, 2, 0.05}, {{
       Hold[$CellContext`\[Delta]$$], 3}, 2, 3, 0.05}, {{
       Hold[$CellContext`\[Omega]$$], 0.45}, 0, 0.5, 0.05}, {{
       Hold[$CellContext`\[Xi]$$], 0.9}, -5, 5, 0.05}, {{
       Hold[$CellContext`\[Psi]$$], 1}, 0, 2, 0.05}, {
      Hold["lower limit of integration"], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`lowerLimitOfIntegration$$], 0, ""}, 0, 8, 0.1}, {
      Hold["upper limit of integration"], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`upperLimitOfIntegration$$], 8, ""}, 
      Dynamic[$CellContext`lowerLimitOfIntegration$$ + 0.1], 8, 0.1}, {
      Hold["volume of solid region: "], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Dynamic[($CellContext`azimuthalAngle$$/(2 Pi)) (
           NIntegrate[
            Pi ($CellContext`\[Alpha]$$ 
                Cos[$CellContext`\[Beta]$$ $CellContext`\[Tau] + \
$CellContext`\[Chi]$$] + $CellContext`\[Delta]$$ + 
               0.55)^2, {$CellContext`\[Tau], \
$CellContext`lowerLimitOfIntegration$$, \
$CellContext`upperLimitOfIntegration$$}, AccuracyGoal -> 20] - NIntegrate[
           Pi ($CellContext`\[Omega]$$ 
               Sin[$CellContext`\[Xi]$$ $CellContext`\[Tau] + $CellContext`\
\[Psi]$$] + 
              1)^2, {$CellContext`\[Tau], \
$CellContext`lowerLimitOfIntegration$$, \
$CellContext`upperLimitOfIntegration$$}, AccuracyGoal -> 20])], 
         " cubic units"}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {450., {222., 228.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`planeForm$10146$$ = 
    False, $CellContext`solidForm$10151$$ = 
    False, $CellContext`transparentForm$10152$$ = 
    False, $CellContext`azimuthalAngle$10153$$ = 
    0, $CellContext`\[Alpha]$10154$$ = 0, $CellContext`\[Beta]$10155$$ = 
    0, $CellContext`\[Chi]$10156$$ = 0, $CellContext`\[Delta]$10157$$ = 
    0, $CellContext`\[Omega]$10158$$ = 0, $CellContext`\[Xi]$10159$$ = 
    0, $CellContext`\[Psi]$10160$$ = 
    0, $CellContext`lowerLimitOfIntegration$10161$$ = 
    0, $CellContext`upperLimitOfIntegration$10162$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`azimuthalAngle$$ = 
        4.0213, $CellContext`lowerLimitOfIntegration$$ = 
        0, $CellContext`planeForm$$ = False, $CellContext`solidForm$$ = 
        False, $CellContext`transparentForm$$ = 
        False, $CellContext`upperLimitOfIntegration$$ = 
        8, $CellContext`\[Alpha]$$ = 0.3, $CellContext`\[Beta]$$ = 
        1.65, $CellContext`\[Delta]$$ = 3, $CellContext`\[Xi]$$ = 
        0.9, $CellContext`\[Chi]$$ = 1.65, $CellContext`\[Psi]$$ = 
        1, $CellContext`\[Omega]$$ = 0.45}, "ControllerVariables" :> {
        Hold[$CellContext`planeForm$$, $CellContext`planeForm$10146$$, False], 
        Hold[$CellContext`solidForm$$, $CellContext`solidForm$10151$$, False], 
        Hold[$CellContext`transparentForm$$, \
$CellContext`transparentForm$10152$$, False], 
        Hold[$CellContext`azimuthalAngle$$, \
$CellContext`azimuthalAngle$10153$$, 0], 
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$10154$$, 0], 
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$10155$$, 0], 
        Hold[$CellContext`\[Chi]$$, $CellContext`\[Chi]$10156$$, 0], 
        Hold[$CellContext`\[Delta]$$, $CellContext`\[Delta]$10157$$, 0], 
        Hold[$CellContext`\[Omega]$$, $CellContext`\[Omega]$10158$$, 0], 
        Hold[$CellContext`\[Xi]$$, $CellContext`\[Xi]$10159$$, 0], 
        Hold[$CellContext`\[Psi]$$, $CellContext`\[Psi]$10160$$, 0], 
        Hold[$CellContext`lowerLimitOfIntegration$$, \
$CellContext`lowerLimitOfIntegration$10161$$, 0], 
        Hold[$CellContext`upperLimitOfIntegration$$, \
$CellContext`upperLimitOfIntegration$10162$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`f$, $CellContext`g$}, $CellContext`f$[
           Pattern[$CellContext`x$, 
            Blank[]]] := $CellContext`\[Omega]$$ 
           Sin[$CellContext`\[Xi]$$ $CellContext`x$ + $CellContext`\[Psi]$$] + 
          1; $CellContext`g$[
           Pattern[$CellContext`x$, 
            Blank[]]] := $CellContext`\[Alpha]$$ 
           Cos[$CellContext`\[Beta]$$ $CellContext`x$ + \
$CellContext`\[Chi]$$] + $CellContext`\[Delta]$$ + 0.55; Show[{
           ParametricPlot3D[{$CellContext`\[Tau], 0, 
             $CellContext`f$[$CellContext`\[Tau]]}, {$CellContext`\[Tau], \
$CellContext`lowerLimitOfIntegration$$ - 
             0.25, $CellContext`upperLimitOfIntegration$$ + 0.25}, 
            PlotStyle -> {Green, 
              AbsoluteThickness[1.75]}], 
           ParametricPlot3D[{$CellContext`\[Tau], 0, 
             $CellContext`g$[$CellContext`\[Tau]]}, {$CellContext`\[Tau], \
$CellContext`lowerLimitOfIntegration$$ - 
             0.25, $CellContext`upperLimitOfIntegration$$ + 0.25}, 
            PlotStyle -> {Blue, 
              AbsoluteThickness[1.75]}], 
           Graphics3D[{
             
             Line[{{$CellContext`lowerLimitOfIntegration$$, 
                0, -0.05}, {$CellContext`lowerLimitOfIntegration$$, 0, 
                0.05}}], 
             
             Line[{{$CellContext`upperLimitOfIntegration$$, 
                0, -0.05}, {$CellContext`upperLimitOfIntegration$$, 0, 
                0.05}}], {
              Text[
               Row[{
                 Style["f", Italic], "(", 
                 Style["t", Italic], ") = ", 
                 $CellContext`g$[$CellContext`t]}], \
{$CellContext`upperLimitOfIntegration$$ + 0.75, 0, 
                $CellContext`g$[$CellContext`upperLimitOfIntegration$$]}], 
              Text[
               Style[
                Row[{
                  Style["g", Italic], "(", 
                  Style["t", Italic], ") = ", 
                  $CellContext`f$[$CellContext`t]}], 
                14], {$CellContext`upperLimitOfIntegration$$ + 0.75, 0, 
                $CellContext`f$[$CellContext`upperLimitOfIntegration$$]}], 
              Text[
               Style["t", Italic], {8 + 0.3, 0, 0}], 
              Text[
               Style["y", Italic], {0, 0, 4.6}]}, {
              RGBColor[0, 0.5, 0.25], 
              Line[{{0, 0, 0}, {8 + 0.2, 0, 0}}], 
              Line[{{0, 0, -4.5}, {0, 0, 4.5}}]}, 
             If[
              Or[
               And[$CellContext`planeForm$$, 
                Not[$CellContext`solidForm$$]], 
               
               And[$CellContext`planeForm$$, $CellContext`solidForm$$, \
$CellContext`azimuthalAngle$$ < 2 Pi]], {
               EdgeForm[{Thick, Red}], LightMagenta, 
               Polygon[
                Join[
                 
                 Table[{$CellContext`\[Tau], $CellContext`g$[$CellContext`\
\[Tau]] Sin[-$CellContext`azimuthalAngle$$], $CellContext`g$[$CellContext`\
\[Tau]] Cos[-$CellContext`azimuthalAngle$$]}, {$CellContext`\[Tau], \
$CellContext`lowerLimitOfIntegration$$, \
$CellContext`upperLimitOfIntegration$$, 0.0015}], 
                 
                 Table[{$CellContext`\[Tau], $CellContext`f$[$CellContext`\
\[Tau]] Sin[-$CellContext`azimuthalAngle$$], $CellContext`f$[$CellContext`\
\[Tau]] Cos[-$CellContext`azimuthalAngle$$]}, {$CellContext`\[Tau], \
$CellContext`upperLimitOfIntegration$$, \
$CellContext`lowerLimitOfIntegration$$, -0.0015}]]]}, {}], 
             If[$CellContext`solidForm$$, {
               EdgeForm[{Thick, Red}], 
               If[$CellContext`transparentForm$$, 
                Opacity[0.75], 
                Opacity[1]], 
               Polygon[
                Join[
                 
                 Table[{$CellContext`upperLimitOfIntegration$$, \
$CellContext`g$[$CellContext`upperLimitOfIntegration$$] 
                   Sin[-$CellContext`\[Theta]], \
$CellContext`g$[$CellContext`upperLimitOfIntegration$$] 
                   Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], 
                   0, $CellContext`azimuthalAngle$$, Pi/100}], 
                 
                 Table[{$CellContext`upperLimitOfIntegration$$, \
$CellContext`f$[$CellContext`upperLimitOfIntegration$$] 
                   Sin[-$CellContext`\[Theta]], \
$CellContext`f$[$CellContext`upperLimitOfIntegration$$] 
                   Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], \
$CellContext`azimuthalAngle$$, 0, (-Pi)/100}]]]}, {}], 
             If[$CellContext`solidForm$$, {
               EdgeForm[{Thick, Red}], 
               If[$CellContext`transparentForm$$, 
                Opacity[0.75], 
                Opacity[1]], 
               Polygon[
                Join[
                 
                 Table[{$CellContext`lowerLimitOfIntegration$$, \
$CellContext`g$[$CellContext`lowerLimitOfIntegration$$] 
                   Sin[-$CellContext`\[Theta]], \
$CellContext`g$[$CellContext`lowerLimitOfIntegration$$] 
                   Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], 
                   0, $CellContext`azimuthalAngle$$, Pi/100}], 
                 
                 Table[{$CellContext`lowerLimitOfIntegration$$, \
$CellContext`f$[$CellContext`lowerLimitOfIntegration$$] 
                   Sin[-$CellContext`\[Theta]], \
$CellContext`f$[$CellContext`lowerLimitOfIntegration$$] 
                   Cos[-$CellContext`\[Theta]]}, {$CellContext`\[Theta], \
$CellContext`azimuthalAngle$$, 0, (-Pi)/100}]]]}, {}]}], 
           If[$CellContext`solidForm$$, 
            RevolutionPlot3D[
             $CellContext`g$[$CellContext`\[Tau]], {$CellContext`\[Tau], \
$CellContext`lowerLimitOfIntegration$$, \
$CellContext`upperLimitOfIntegration$$}, {$CellContext`\[Theta], 
              0, $CellContext`azimuthalAngle$$}, RevolutionAxis -> {1, 0, 0}, 
             PerformanceGoal -> "Quality", Mesh -> None, PlotStyle -> 
             If[$CellContext`transparentForm$$, 
               Opacity[0.5], 
               Opacity[1]]], {}], 
           If[
            And[$CellContext`solidForm$$, $CellContext`transparentForm$$], 
            RevolutionPlot3D[
             $CellContext`f$[$CellContext`\[Tau]], {$CellContext`\[Tau], \
$CellContext`lowerLimitOfIntegration$$, \
$CellContext`upperLimitOfIntegration$$}, {$CellContext`\[Theta], 
              0, $CellContext`azimuthalAngle$$}, RevolutionAxis -> {1, 0, 0}, 
             PerformanceGoal -> "Quality", Mesh -> None, PlotStyle -> 
             Opacity[1]], {}]}, PlotRange -> {{0, 8}, {-7, 7}, {-5, 5}}, 
          AxesOrigin -> {0, 0, 0}, Boxed -> False, Axes -> {None, None, None},
           ViewPoint -> {1.5, -4, 0}, Background -> White, 
          ImageSize -> {450, 450}, BaseStyle -> 14]], "Specifications" :> {
        Style["functions ", Bold], Delimiter, 
        Row[{
          Style["f", Italic], "(", 
          Style["t", Italic], ") = \[Omega] sin(\[Xi] ", 
          Style["t", Italic], " + \[Psi]) + 1"}], 
        Row[{
          Style["g", Italic], "(", 
          Style["t", Italic], ") = \[Alpha] cos(\[Beta] ", 
          Style["t", Italic], " + \[Chi]) + \[Delta] + 0.55"}], Delimiter, 
        Style[
        "visualization", Bold], {{$CellContext`planeForm$$, False, "2D"}, {
         True, False}, ControlType -> Checkbox, ControlPlacement -> 
         1}, {{$CellContext`solidForm$$, False, "3D"}, {True, False}, 
         ControlType -> Checkbox, ControlPlacement -> 
         2}, {{$CellContext`transparentForm$$, False, "transparent"}, {
         True, False}, ControlType -> Checkbox, ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Spacer[5], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], ""}}, Alignment -> Right], 
        "azimuthal angle", {{$CellContext`azimuthalAngle$$, 4.0213, ""}, 
         0.0001, 6.2831, 0.0001, ImageSize -> Tiny, Appearance -> "Labeled", 
         Enabled -> Dynamic[
           Or[$CellContext`planeForm$$, $CellContext`solidForm$$]]}, 
        Delimiter, 
        Style[
        "parameters", Bold], {{$CellContext`\[Alpha]$$, 0.3}, 0, 1, 0.05, 
         Appearance -> "Labeled", ImageSize -> 
         Tiny}, {{$CellContext`\[Beta]$$, 1.65}, -3, 3, 0.05, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`\[Chi]$$, 1.65}, 0, 2, 
         0.05, Appearance -> "Labeled", ImageSize -> 
         Tiny}, {{$CellContext`\[Delta]$$, 3}, 2, 3, 0.05, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`\[Omega]$$, 0.45}, 0, 
         0.5, 0.05, Appearance -> "Labeled", ImageSize -> 
         Tiny}, {{$CellContext`\[Xi]$$, 0.9}, -5, 5, 0.05, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`\[Psi]$$, 1}, 0, 2, 
         0.05, Appearance -> "Labeled", ImageSize -> Tiny}, 
        "lower limit of integration", \
{{$CellContext`lowerLimitOfIntegration$$, 0, ""}, 0, 8, 0.1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, 
        "upper limit of integration", \
{{$CellContext`upperLimitOfIntegration$$, 8, ""}, 
         Dynamic[$CellContext`lowerLimitOfIntegration$$ + 0.1], 8, 0.1, 
         Appearance -> "Labeled", ImageSize -> Tiny}, Delimiter, 
        "volume of solid region: ", 
        Row[{
          
          Dynamic[($CellContext`azimuthalAngle$$/(2 Pi)) (
            NIntegrate[
             Pi ($CellContext`\[Alpha]$$ 
                 Cos[$CellContext`\[Beta]$$ $CellContext`\[Tau] + \
$CellContext`\[Chi]$$] + $CellContext`\[Delta]$$ + 
                0.55)^2, {$CellContext`\[Tau], \
$CellContext`lowerLimitOfIntegration$$, \
$CellContext`upperLimitOfIntegration$$}, AccuracyGoal -> 20] - NIntegrate[
            Pi ($CellContext`\[Omega]$$ 
                Sin[$CellContext`\[Xi]$$ $CellContext`\[Tau] + $CellContext`\
\[Psi]$$] + 
               1)^2, {$CellContext`\[Tau], \
$CellContext`lowerLimitOfIntegration$$, \
$CellContext`upperLimitOfIntegration$$}, AccuracyGoal -> 20])], 
          " cubic units"}]}, "Options" :> {ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{720., {266., 272.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 415.},
 CellChangeTimes->{
  3.760839912691536*^9, {3.822576147238329*^9, 3.8225762082957087`*^9}},
 CellID->1716212175,ExpressionUUID->"fdf230f2-9c63-4460-81e8-9496e0bea85c"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum Visualization", "Chapter",
 CellChangeTimes->{{3.8225760561706524`*^9, 
  3.8225760589706974`*^9}},ExpressionUUID->"418c4233-222d-4db4-9b86-\
8265f81821b2"],

Cell["\<\
Credits: https://demonstrations.wolfram.com/\
VolumesOfRevolutionUsingCylindricalShells/ \
\>", "Text",
 CellChangeTimes->{{3.8225760625825996`*^9, 
  3.8225760697228527`*^9}},ExpressionUUID->"5d5392a8-293e-43cb-8642-\
1c234496184b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`loc$$ = 1, $CellContext`n$$ = 
    2, $CellContext`sho$$ = 1, $CellContext`\[Theta]$$ = 0., Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`loc$$], 1, "location"}, {
      1 -> "left side", 2 -> "right side", 3 -> "center"}}, {{
       Hold[$CellContext`sho$$], 1, "show"}, {
      1 -> "solid", 2 -> "cylinders"}}, {{
       Hold[$CellContext`n$$], 2, "number of segments"}, 2, 15, 1}, {{
       Hold[$CellContext`\[Theta]$$], 0, "solid sweep angle"}, 0, Pi, -0.1}}, 
    Typeset`size$$ = {400., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`loc$135505$$ = False, $CellContext`sho$135506$$ = 
    False, $CellContext`n$135507$$ = 0, $CellContext`\[Theta]$135508$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`loc$$ = 1, $CellContext`n$$ = 
        2, $CellContext`sho$$ = 1, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`loc$$, $CellContext`loc$135505$$, False], 
        Hold[$CellContext`sho$$, $CellContext`sho$135506$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$135507$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$135508$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`a = 0; $CellContext`b = 
        2; $CellContext`dx = ($CellContext`b - \
$CellContext`a)/$CellContext`n$$; $CellContext`f[
          Pattern[$CellContext`x, 
           Blank[]]] := 
        2 $CellContext`x^2 - $CellContext`x^3; $CellContext`startpos[1, 
          Pattern[$CellContext`k, 
           Blank[]]] := $CellContext`a + ($CellContext`k - 
           1) $CellContext`dx; $CellContext`startpos[2, 
          Pattern[$CellContext`k, 
           
           Blank[]]] := $CellContext`a + $CellContext`k $CellContext`dx; \
$CellContext`startpos[3, 
          Pattern[$CellContext`k, 
           Blank[]]] := $CellContext`a + ((2 $CellContext`k - 1)/
           2) $CellContext`dx; $CellContext`curve = 
        ParametricPlot3D[{$CellContext`x, 0, 
           2 $CellContext`x^2 - $CellContext`x^3}, {$CellContext`x, \
$CellContext`a, $CellContext`b}, 
          PlotRange -> {{-$CellContext`b, $CellContext`b}, {
            0, $CellContext`b}, {-$CellContext`b, $CellContext`b}}]; \
$CellContext`end = Graphics3D[{
           Table[
            
            Cuboid[{$CellContext`a + ($CellContext`l - 1) $CellContext`dx, 0, 
              0}, {$CellContext`a + $CellContext`l $CellContext`dx, 
              Plus[0.01], $CellContext`f[
                $CellContext`startpos[$CellContext`loc$$, $CellContext`l]] + 
              0.01}], {$CellContext`l, 1, $CellContext`n$$, 1}]}]; 
       If[$CellContext`sho$$ == 1, $CellContext`solid = 
         ParametricPlot3D[{$CellContext`x Cos[$CellContext`y], $CellContext`x 
            Sin[$CellContext`y], 
            2 $CellContext`x^2 - $CellContext`x^3}, {$CellContext`x, \
$CellContext`a, $CellContext`b}, {$CellContext`y, 0, $CellContext`\[Theta]$$ - 
            0.01}, PlotStyle -> {Blue, 
             Opacity[0.25]}, 
           PlotRange -> {{-$CellContext`b, $CellContext`b}, {
             0, $CellContext`b}, {-$CellContext`b, $CellContext`b}}], \
$CellContext`solid = Graphics3D[{Yellow, 
            Opacity[0.5], 
            Table[
             Cylinder[{{0, 0, 0}, {0, 0, 
                $CellContext`f[
                 $CellContext`startpos[$CellContext`loc$$, \
$CellContext`i]]}}, $CellContext`i $CellContext`dx], {$CellContext`i, 
              1, $CellContext`n$$, 1}]}]]; 
       Show[{$CellContext`curve, $CellContext`solid, $CellContext`end}, 
         AxesLabel -> {
           Style["x", Italic], 
           Style["y", Italic], 
           Style["z", Italic]}, AxesOrigin -> {0, 0, 0}, 
         ImageSize -> {400, 400}]), 
      "Specifications" :> {{{$CellContext`loc$$, 1, "location"}, {
         1 -> "left side", 2 -> "right side", 3 -> 
          "center"}}, {{$CellContext`sho$$, 1, "show"}, {
         1 -> "solid", 2 -> "cylinders"}}, {{$CellContext`n$$, 2, 
          "number of segments"}, 2, 15, 1, Appearance -> 
         "Labeled"}, {{$CellContext`\[Theta]$$, 0, "solid sweep angle"}, 0, 
         Pi, -0.1, Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`sho$$ === 1]}}, 
      "Options" :> {
       AutorunSequencing -> {1, 2, 3}, 
        TrackedSymbols :> {$CellContext`\[Theta]$$, $CellContext`n$$, \
$CellContext`loc$$, $CellContext`sho$$}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{451., {281., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",ExpressionUUID->"fcebd4bf-3136-\
40a9-a09e-d67af80ce006"],

Cell["\<\
3D sums: credits: \
https://demonstrations.wolfram.com/StackingCylindersToFormASolidOfRevolution/ \
\>", "Text",
 CellChangeTimes->{{3.8225764422504854`*^9, 
  3.822576455202861*^9}},ExpressionUUID->"1be364a9-2764-497a-832c-\
52d2c24a5fd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sin", ",", "rsin", ",", " ", "c1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sin", "=", 
       RowBox[{
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"ext", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}], ",", " ", "x"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "Pi"}], " ", "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rsin", "=", 
       RowBox[{
        RowBox[{"RevolutionPlot3D", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"ext", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}], ",", " ", "x"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "Pi"}], " ", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "0", ",", "full"}], "}"}], ",", 
          RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"{", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Cylinder", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "0.5"}], ")"}], " ", 
                 RowBox[{"Pi", "/", "n"}]}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "+", "0.5"}], ")"}], " ", 
                 RowBox[{"Pi", "/", "n"}]}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"ext", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"i", " ", 
                RowBox[{"Pi", "/", "n"}]}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"srsin", ",", "rsin", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "sin", ",", 
          RowBox[{"Specularity", "[", "0.3", "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.3", ",", "1", ",", "1"}], "]"}], ",", " ", "c1"}], 
         "}"}], ",", 
        RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
        RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
        RowBox[{"ViewPoint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4", ",", "2"}], "}"}]}], ",", 
        RowBox[{"ViewAngle", "\[Rule]", "0.18"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "3.3"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n", ",", "10", ",", "\"\<number of cylinders\>\""}], 
             "}"}], ",", "4", ",", "40", ",", "1", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ext", ",", "1", ",", "\"\<width\>\""}], "}"}], ",", 
            "0.6", ",", "1.7", ",", "0.01", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}]}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "srsin", ",", " ", "False", ",", " ", "\"\<surface\>\""}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "full", ",", " ", "1", ",", " ", "\"\<extend surface\>\""}], 
             "}"}], ",", "0.1", ",", 
            RowBox[{"2", "Pi"}], ",", "0.01", ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"Enabled", "\[Rule]", 
             RowBox[{"Dynamic", "[", "srsin", "]"}]}]}], "}"}]}]}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "ext", ",", "srsin", ",", "full"}], "}"}]}]}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 2215.},
 CellChangeTimes->{{3.7840563196581364`*^9, 3.7840563294254303`*^9}, {
   3.7840563617427187`*^9, 3.7840563811674476`*^9}, {3.784056426971259*^9, 
   3.7840564322065144`*^9}, {3.7840564857925234`*^9, 
   3.7840565800888596`*^9}, {3.7840566248926497`*^9, 3.784056659163885*^9}, {
   3.7840567362389345`*^9, 3.784056742896185*^9}, {3.7840567902363515`*^9, 
   3.7840568213352175`*^9}, 3.784056859075715*^9, {3.784056929368351*^9, 
   3.7840569975836477`*^9}, {3.784057078486356*^9, 3.784057081924246*^9}, {
   3.78405716878157*^9, 3.7840572904134645`*^9}, {3.7840573240279636`*^9, 
   3.7840575964076405`*^9}, {3.7840576600726156`*^9, 
   3.7840577055161295`*^9}, {3.7840630571475067`*^9, 
   3.7840630588821964`*^9}, {3.784063143318136*^9, 3.7840631545387793`*^9}, {
   3.78406319956152*^9, 3.7840632003586473`*^9}, {3.784063256600939*^9, 
   3.784063288871433*^9}, {3.7840633300495667`*^9, 3.7840633567879286`*^9}, {
   3.7840633902149744`*^9, 3.78406349646636*^9}, {3.7840635357855806`*^9, 
   3.7840635838411665`*^9}, {3.78406368246487*^9, 3.7840636834808373`*^9}, {
   3.7840637606088676`*^9, 3.7840638074784145`*^9}, {3.784063846796486*^9, 
   3.7840638802859793`*^9}, {3.7840639527656136`*^9, 3.784064024463873*^9}, {
   3.784064092504879*^9, 3.784064142012631*^9}, {3.784064200723909*^9, 
   3.7840642029272785`*^9}, 3.784066144844793*^9, 3.7840661984466085`*^9, {
   3.784089287199666*^9, 3.784089326221176*^9}, {3.784089359866825*^9, 
   3.7840893654301095`*^9}, {3.7840894243762226`*^9, 3.784089427501848*^9}, {
   3.7840894615069914`*^9, 3.784089495324704*^9}, {3.784089527610736*^9, 
   3.784089572400795*^9}, {3.784092160024047*^9, 3.7840921656342616`*^9}, {
   3.784092201483473*^9, 3.7840922188768826`*^9}, {3.784092252241612*^9, 
   3.784092332597765*^9}, {3.7840923726199284`*^9, 3.7840924173304825`*^9}, {
   3.7840924548361177`*^9, 3.7840926155801816`*^9}, {3.7840926665259447`*^9, 
   3.7840927771850586`*^9}, {3.784092863292234*^9, 3.7840929292393074`*^9}, {
   3.7840931582299776`*^9, 3.784093227976417*^9}, {3.7840933108801517`*^9, 
   3.7840933349776263`*^9}, {3.7840934224901495`*^9, 
   3.7840934346481004`*^9}, {3.784094367000841*^9, 3.7840943853985505`*^9}, 
   3.7840958524403677`*^9, 3.7840966349783077`*^9, {3.784483165038247*^9, 
   3.7844831927451897`*^9}, {3.78448473181236*^9, 3.784484761938211*^9}, {
   3.784484801224421*^9, 3.784484899053748*^9}, {3.7844849541012707`*^9, 
   3.784484957689105*^9}, {3.784484995276313*^9, 3.784485003993969*^9}, {
   3.7844850407715893`*^9, 3.78448504505723*^9}, {3.784485802236871*^9, 
   3.784485859242879*^9}, {3.7844859199708767`*^9, 3.784485926247918*^9}, {
   3.784487644247304*^9, 3.7844876486063538`*^9}, {3.793125802667079*^9, 
   3.793125810313643*^9}, 3.817327089537429*^9},
 CellID->198885588,ExpressionUUID->"dd54eea5-81f7-46b3-b85e-9f76a558c70d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ext$$ = 
    1.3599999999999999`, $CellContext`full$$ = 2.41, $CellContext`n$$ = 
    7, $CellContext`srsin$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 10, "number of cylinders"}, 4, 40, 1}, {{
       Hold[$CellContext`ext$$], 1, "width"}, 0.6, 1.7, 0.01}, {{
       Hold[$CellContext`srsin$$], False, "surface"}, {False, True}}, {{
       Hold[$CellContext`full$$], 1, "extend surface"}, 0.1, 2 Pi, 0.01}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Manipulate`Place[4]}}, Alignment -> Left, Spacings -> {3, 1}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    450., {222., 228.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$576635$$ = 
    0, $CellContext`ext$576636$$ = 0, $CellContext`srsin$576637$$ = 
    False, $CellContext`full$576638$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`ext$$ = 1, $CellContext`full$$ = 
        1, $CellContext`n$$ = 10, $CellContext`srsin$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$576635$$, 0], 
        Hold[$CellContext`ext$$, $CellContext`ext$576636$$, 0], 
        Hold[$CellContext`srsin$$, $CellContext`srsin$576637$$, False], 
        Hold[$CellContext`full$$, $CellContext`full$576638$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`sin$, $CellContext`rsin$, $CellContext`c1$}, \
$CellContext`sin$ = Part[
           
           ParametricPlot3D[{
            0, $CellContext`ext$$ 
             Sin[$CellContext`x], $CellContext`x}, {$CellContext`x, 0, Pi}], 
           1]; $CellContext`rsin$ = Part[
           
           RevolutionPlot3D[{
            0, $CellContext`ext$$ 
             Sin[$CellContext`x], $CellContext`x}, {$CellContext`x, 0, 
             Pi}, {$CellContext`y, 0, $CellContext`full$$}, Mesh -> None], 
           1]; $CellContext`c1$ = {
           Table[
            
            Cylinder[{{0, 0, ($CellContext`i - 0.5) (Pi/$CellContext`n$$)}, {
              0, 0, ($CellContext`i + 0.5) (
                Pi/$CellContext`n$$)}}, {$CellContext`ext$$ 
              Sin[$CellContext`i (
                 Pi/$CellContext`n$$)]}], {$CellContext`i, \
$CellContext`n$$}]}; Graphics3D[{
           
           If[$CellContext`srsin$$, $CellContext`rsin$, {}], \
$CellContext`sin$, 
           Specularity[0.3], 
           RGBColor[0.3, 1, 1], $CellContext`c1$}, SphericalRegion -> True, 
          Boxed -> False, ViewPoint -> {2, 4, 2}, ViewAngle -> 0.18, 
          PlotRange -> {{-2, 2}, {-2, 2}, {0, 3.3}}, ImageSize -> 450]], 
      "Specifications" :> {{{$CellContext`n$$, 10, "number of cylinders"}, 4, 
         40, 1, Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         1}, {{$CellContext`ext$$, 1, "width"}, 0.6, 1.7, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         2}, {{$CellContext`srsin$$, False, "surface"}, {False, True}, 
         ControlPlacement -> 3}, {{$CellContext`full$$, 1, "extend surface"}, 
         0.1, 2 Pi, 0.01, ImageSize -> Small, Appearance -> "Labeled", 
         Enabled -> Dynamic[$CellContext`srsin$$], ControlPlacement -> 4}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Manipulate`Place[4]}}, Alignment -> Left, Spacings -> {3, 1}]}, 
      "Options" :> {
       TrackedSymbols -> {$CellContext`n$$, $CellContext`ext$$, \
$CellContext`srsin$$, $CellContext`full$$}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{575., {281., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 2215.},
 CellChangeTimes->{3.817327089537591*^9, 3.822576422495434*^9},
 CellID->514997575,ExpressionUUID->"2b7f1ac4-93fe-4d40-811a-8d3f94568add"]
}, {2}]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1022, 1060},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->FrontEnd`FileName[{"PresenterTools"}, "Garnet.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"3df9dd94-6113-406e-90a1-e4fb4f92fd5e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 168, 3, 113, "Title",ExpressionUUID->"0de6ef5f-3335-4ad4-97d5-cbd258714550"],
Cell[754, 27, 227, 5, 141, "Subtitle",ExpressionUUID->"fbca61c8-12e5-4faf-bfa5-8fcf80a40ced"],
Cell[984, 34, 167, 3, 31, "Text",ExpressionUUID->"a0ac548d-9b34-41ce-bdd6-3d3cd9cfeff4"],
Cell[CellGroupData[{
Cell[1176, 41, 160, 3, 70, "Chapter",ExpressionUUID->"ff324cad-4b4d-44f3-8a90-0295dfe094be"],
Cell[1339, 46, 200, 3, 31, "Text",ExpressionUUID->"ae9849d0-c312-4545-9d26-97db319924ac"],
Cell[CellGroupData[{
Cell[1564, 53, 19584, 490, 70, "Input",ExpressionUUID->"1426f7e2-1762-40c0-9beb-3b19d8bd3bb3",
 CellGroupingRules->{"GroupTogetherGrouping", 7585.}],
Cell[21151, 545, 74752, 1278, 533, "Output",ExpressionUUID->"6fab846e-7495-4085-beba-fc3bad9be016",
 CellGroupingRules->{"GroupTogetherGrouping", 7585.},
 CellID->253619128]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95949, 1829, 217, 4, 70, "Chapter",ExpressionUUID->"7744f3d5-e8f4-456b-be6b-3e32dbde87fd"],
Cell[96169, 1835, 213, 5, 31, "Text",ExpressionUUID->"aefcbc2a-830e-4349-a1b7-a4068198415a"],
Cell[CellGroupData[{
Cell[96407, 1844, 26000, 570, 70, "Input",ExpressionUUID->"6f1dba37-998c-4cd5-a5d7-234942201f87",
 CellGroupingRules->{"GroupTogetherGrouping", 9507.},
 CellID->105746839],
Cell[122410, 2416, 19889, 378, 581, "Output",ExpressionUUID->"2753b571-69bf-489a-8dba-4093c6224d0f",
 CellGroupingRules->{"GroupTogetherGrouping", 9507.},
 CellID->46805178]
}, {2}]],
Cell[142311, 2797, 335, 8, 51, "Text",ExpressionUUID->"5dc54ada-bb61-4355-a798-bb3389783b79"],
Cell[CellGroupData[{
Cell[142671, 2809, 26410, 608, 70, "Input",ExpressionUUID->"a5321d31-a2ef-47a3-93a4-ed441c438e6b",
 CellGroupingRules->{"GroupTogetherGrouping", 415.},
 CellID->487977174],
Cell[169084, 3419, 17062, 340, 557, "Output",ExpressionUUID->"fdf230f2-9c63-4460-81e8-9496e0bea85c",
 CellGroupingRules->{"GroupTogetherGrouping", 415.},
 CellID->1716212175]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[186192, 3765, 166, 3, 70, "Chapter",ExpressionUUID->"418c4233-222d-4db4-9b86-8265f81821b2"],
Cell[186361, 3770, 243, 6, 31, "Text",ExpressionUUID->"5d5392a8-293e-43cb-8642-1c234496184b"],
Cell[186607, 3778, 5504, 108, 583, "Input",ExpressionUUID->"fcebd4bf-3136-40a9-a09e-d67af80ce006"],
Cell[192114, 3888, 250, 6, 31, "Text",ExpressionUUID->"1be364a9-2764-497a-832c-52d2c24a5fd9"],
Cell[CellGroupData[{
Cell[192389, 3898, 8648, 189, 70, "Input",ExpressionUUID->"dd54eea5-81f7-46b3-b85e-9f76a558c70d",
 CellGroupingRules->{"GroupTogetherGrouping", 2215.},
 CellID->198885588],
Cell[201040, 4089, 4820, 96, 587, "Output",ExpressionUUID->"2b7f1ac4-93fe-4d40-811a-8d3f94568add",
 CellGroupingRules->{"GroupTogetherGrouping", 2215.},
 CellID->514997575]
}, {2}]]
}, Open  ]]
}, Open  ]]
}
]
*)

